#INCLUDE "TOPCONN.CH"
#Include "aarray.ch"
#Include "json.ch"
#Include "shash.ch"

USER FUNCTION ROTINA(OSAY,CJOB)

	PRIVATE CTAB1        := GETMV("XX_TAB1")

	PRIVATE ADADOSPOST := {}
	PRIVATE ADADOSPUT  := {}
	PRIVATE ADADOSDEL  := {}

//ROTINA MANUAL DENTRO DA TELA D
	IF ALLTRIM(FUNNAME()) == "CAD_ENDP"
		IF EMPTY(CTAB1)
			MSGINFO("Preencher o parâmetro XX_TAB1.")
			RETURN
		ENDIF

		CFLAG      := &(CTAB1+"->"+CTAB1+"_FLAG")//ZM1->ZM1_FLAG
		CTIPO      := &(CTAB1+"->"+CTAB1+"_TIPO")//ZM1_TIPO
		CENDPOINT  := &(CTAB1+"->"+CTAB1+"_DESC")//ZM1->ZM1_DESC
		CCODIGO    := &(CTAB1+"->"+CTAB1+"_CODIGO")//ZM1->ZM1_CODIGO
		CPATH      := &(CTAB1+"->"+CTAB1+"_PATH")//ZM1->ZM1_PATH
		CPARTICIO  := "1" //&(CTAB1+"->"+CTAB1+"_FRACIO")//ZM1->ZM1_FRACIO
		CMETODO    := &(CTAB1+"->"+CTAB1+"_METODO")//ZM1->ZM1_FRACIO
		CFUNCAO    := &(CTAB1+"->"+CTAB1+"_FUNCAO")//ZM1->ZM1_FRACIO
		CDELETE    := &(CTAB1+"->"+CTAB1+"_DELETE")

		ADADOSPOST := {}
		ADADOSPUT  := {}
		ADADOSDEL  := {1}
		ADADOSGET  := {1}

		//MANDA UM DELETE ANTES DE ENVIAR OS NOVOS DADOS
		IF CDELETE == "1"
			U_BENVIA(ADADOSDEL   ,"DELETE" , CENDPOINT, ALLTRIM(CPATH)+"/Todos")
		ENDIF

		//1 - BUSCA OS DADOS DOS CAMPOS DA MAXIMA E PREENCHE COM OS CAMPOS DO PROTHEUS
		IF !BUSC_CAMP(CCODIGO,CPATH,CFLAG,CENDPOINT,OSAY,CPARTICIO)
			ALERT("Erro no código: " + CCODIGO)
		ELSE
			IF CMETODO != "3"
				//2 - MONTA O JSON E ENVIA
				IF !EMPTY(ADADOSPOST)
					U_BENVIA(ADADOSPOST  ,"POST"   , CENDPOINT, CPATH,CPARTICIO)
				ENDIF
			ELSE
				FWMsgRun(, {|| U_BENVIA(ADADOSGET   ,"GET"    , CENDPOINT, CPATH)  }, "Processando", "Processando a rotina...")
			ENDIF
		ENDIF
	ELSE
		IF EMPTY(CTAB1)
			CONOUT("Preencher o parâmetro XX_TAB1.")
			RETURN
		ENDIF

		DBSELECTAREA(CTAB1)
		(CTAB1)->(DBSETORDER(1))
		(CTAB1)->(DBGOTOP())

		WHILE !(CTAB1)->(EOF())

			CFLAG      := &(CTAB1+"->"+CTAB1+"_FLAG")//ZM1->ZM1_FLAG
			CTIPO      := &(CTAB1+"->"+CTAB1+"_TIPO")//ZM1_TIPO
			CENDPOINT  := &(CTAB1+"->"+CTAB1+"_DESC")//ZM1->ZM1_DESC
			CCODIGO    := &(CTAB1+"->"+CTAB1+"_CODIGO")//ZM1->ZM1_CODIGO
			CPATH      := &(CTAB1+"->"+CTAB1+"_PATH")//ZM1->ZM1_PATH
			CPARTICIO  := "1"//&(CTAB1+"->"+CTAB1+"_FRACIO")//ZM1->ZM1_FRACIO
			CMETODO    := &(CTAB1+"->"+CTAB1+"_METODO")//ZM1->ZM1_FRACIO
			CFUNCAO    := &(CTAB1+"->"+CTAB1+"_FUNCAO")//ZM1->ZM1_FRACIO
			CDELETE    := &(CTAB1+"->"+CTAB1+"_DELETE")

			ADADOSPOST := {}
			ADADOSPUT  := {}
			ADADOSDEL  := {1}
			ADADOSGET  := {1}

			IF CTIPO == "1" .AND. !EMPTY(CFLAG)//MANUAL E ESTA FLAGADO EU NÃO PROCESSO. ISSO É PARA AQUELES CASOS DE CADASTROS TIPO DE ATIVIDADE, QUE SERÁ IMPORTADO
				//SOMENTE NA PRIMEIRA VEZ QUE O JOB RODAR NO CLIENTE. SE HOUVE ALTERACAO O USUÁRIO IRÁ USAR UM BOTÃO NA TELA DE CADASTRO PRA ENVIAR ESSE CADASTRO MANUALMENTE.
				&(CTAB1+"->(DBSKIP())")//ZM1->(DBSKIP())
				LOOP
			ELSE
				//SE O JOB FOR TIPO 2= FREQUENTE OU 3=DIARIO TEM QUE PEGAR SÓ O QUE É IGUAL
				IF CJOB != CTIPO
					&(CTAB1+"->(DBSKIP())")//ZM1->(DBSKIP())
					LOOP
				ENDIF
			ENDIF

			//MANDA UM DELETE ANTES DE ENVIAR OS NOVOS DADOS
			IF CDELETE == "1"
				U_BENVIA(ADADOSDEL   ,"DELETE" , CENDPOINT, ALLTRIM(CPATH)+"/Todos",CPARTICIO)
			ENDIF

			//1 - BUSCA OS DADOS DOS CAMPOS DA MAXIMA E PREENCHE COM OS CAMPOS DO PROTHEUS
			IF !BUSC_CAMP(CCODIGO,CPATH,CFLAG,CENDPOINT,,CPARTICIO)
				//ALERT("Erro no código: " + CCODIGO)
			ELSE
				IF CMETODO != "3"
					//2 - MONTA O JSON E ENVIA
					IF !EMPTY(ADADOSPOST)
						U_BENVIA(ADADOSPOST  ,"POST"   , CENDPOINT, CPATH,CPARTICIO)
					ENDIF
				ELSE
					U_BENVIA(ADADOSGET   ,"GET"    , CENDPOINT, CPATH,CPARTICIO)
				ENDIF
			ENDIF

			&(CTAB1+"->(DBSKIP())")//	ZM1->(DBSKIP())
		ENDDO
	ENDIF

RETURN

STATIC FUNCTION BUSC_CAMP(CCODIGO,CENDPOINT,CFLAG,CENDPOINT,OSAY,CPARTICIO)

	LOCAL CQUERY     := U_BUSCA_QRY(CENDPOINT,CFLAG)//BUSCA A QUERY
	LOCAL CTAB2      := GETMV("XX_TAB2")
	LOCAL ADADOS     := {}
	LOCAL NMAXIMO    := 1500//GETMV("XX_MAXIMO")// QUANTIDADE MAXIMA DE REGISTROS NO ARQUIVO. QUEBRA DE ARQUIVOS

	IF EMPTY(NMAXIMO)
		NMAIXMO := 0
	ENDIF

	IF EMPTY(CTAB2)
		MSGINFO("Preencher o parâmetro XX_TAB2.")
		RETURN(.T.)
	ENDIF

//SE NÃO TIVER QUERY ELE VAI APENAS PEGAR O VALOR QUE ESTÁ NA ZM2
	IF EMPTY(CQUERY)
		//POSICIONA NA TABELA CUSTOMIZADA PARA BUSCAR OS CAMPOS
		IF &(CTAB2+'->(DBSEEK(XFILIAL("'+CTAB2+'")+"'+CCODIGO+'"))') //ZM2->(DBSEEK(XFILIAL("ZM2")+CCODIGO))
			WHILE !(CTAB2)->(EOF()) .AND. &(CTAB2+"->"+CTAB2+"_FILIAL") + &(CTAB2+"->"+CTAB2+"_CODIGO") == &("XFILIAL('"+CTAB2+"')") + CCODIGO//ZM2->(ZM2_FILIAL+ZM2_CODIGO)
				CCAMPO1  := &("ALLTRIM("+CTAB2+"->"+CTAB2+"_CAMPO1)")//ALLTRIM(ZM2->ZM2_CAMPO1)
				CTIPO2   := &(CTAB2+"->"+CTAB2+"_TIPO1")//ZM2->ZM2_TIPO1

				//TRATAR O TIPO DO CAMPO TIPO2
				//1= DICIONARIO
				//2= CONSTANTE
				//3= FUNCAO
				DO CASE
				CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "1"//ZM2->ZM2_TIPO2
					MSGINFO("Como não existe uma query para esse endpoint não é possível usar o tipo 1= DICIONARIO")
					RETURN(.F.)

				CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "2"
					CCAMPO2 := &("ALLTRIM("+CTAB2+"->"+CTAB2+"_CAMPO2)")//ALLTRIM(ZM2->ZM2_CAMPO2)
					CCAMPO2 := TRATA_VARIAVEL(CCAMPO2,CTIPO2)

				CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "3"
					CCAMPO2 := &(&(CTAB2+"->"+CTAB2+"_CAMPO2"))//&(ZM2->ZM2_CAMPO2)
					CCAMPO2 := STRTRAN(CCAMPO2,'"','')
					CCAMPO2 := TRATA_VARIAVEL(CCAMPO2,CTIPO2)
				ENDCASE

				AADD(ADADOS, {CCAMPO1, CCAMPO2})

				(CTAB2)->(DBSKIP())//			ZM2->(DBSKIP())
			ENDDO

			AADD(ADADOSPOST, ADADOS)

			ADADOS := {}
		ENDIF
	ELSE
		NTOTAL := 0
		IF CQUERY != "*"
			IF SELECT("TMP") > 0
				TMP->(DBCLOSEAREA())
			ENDIF

			//FAZ O SELECT COM OS DADOS
			TCQUERY CQUERY NEW ALIAS "TMP"

			COUNT TO NTOTAL
			TMP->(DBGOTOP())
		ENDIF

		IF TMP->(EOF())
			MSGINFO("Não existe dados.")
			TMP->(DBCLOSEAREA())
			RETURN(.F.)
		ENDIF

		DBSELECTAREA(CTAB2)
		(CTAB2)->(DBSETORDER(1))

		NCONT := 0

		WHILE !TMP->(EOF())
			NCONT++
			IF ALLTRIM(FUNNAME()) == "CAD_ENDP"
				oSay:SetText("Processando...: Registro " + CVALTOCHAR(NCONT) + " até " + CVALTOCHAR(NTOTAL)) // ALTERA O TEXTO CORRETO
				ProcessMessage() // FORÇA O DESCONGELAMENTO DO SMARTCLIENT
			ENDIF
			//POSICIONA NA TABELA CUSTOMIZADA PARA BUSCAR OS CAMPOS
			IF &(CTAB2+'->(DBSEEK(XFILIAL("'+CTAB2+'")+"'+CCODIGO+'"))') //ZM2->(DBSEEK(XFILIAL("ZM2")+CCODIGO))
				WHILE !(CTAB2)->(EOF()) .AND. &(CTAB2+"->"+CTAB2+"_FILIAL") + &(CTAB2+"->"+CTAB2+"_CODIGO") == &("XFILIAL('"+CTAB2+"')") + CCODIGO//ZM2->(ZM2_FILIAL+ZM2_CODIGO)
					CCAMPO1  := &("ALLTRIM("+CTAB2+"->"+CTAB2+"_CAMPO1)")//ALLTRIM(ZM2->ZM2_CAMPO1)
					CTIPO2   := &(CTAB2+"->"+CTAB2+"_TIPO1")//ZM2->ZM2_TIPO1

					//TRATAR O TIPO DO CAMPO TIPO2
					//1= DICIONARIO
					//2= CONSTANTE
					//3= FUNCAO
					DO CASE
					CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "1"
						CCAMPO2 := &("TMP->("+ALLTRIM(&(CTAB2+"->"+CTAB2+"_CAMPO2"))+")")//&("TMP->("+ALLTRIM(ZM2->ZM2_CAMPO2)+")")
						CCAMPO2 := TRATA_VARIAVEL(CCAMPO2,CTIPO2)

					CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "2"
						CCAMPO2 := &("ALLTRIM("+CTAB2+"->"+CTAB2+"_CAMPO2)")//ALLTRIM(ZM2->ZM2_CAMPO2)
						CCAMPO2 := TRATA_VARIAVEL(CCAMPO2,CTIPO2)

					CASE &(CTAB2+"->"+CTAB2+"_TIPO2") == "3"
						CCAMPO2 := &(&(CTAB2+"->"+CTAB2+"_CAMPO2"))//&(ZM2->ZM2_CAMPO2)
						CCAMPO2 := STRTRAN(IIF(TYPE("CCAMPO2")=="N",CVALTOCHAR(CCAMPO2),IIF(TYPE("CCAMPO2")=="D",DTOC(CCAMPO2),CCAMPO2)),'"','')
						CCAMPO2 := TRATA_VARIAVEL(CCAMPO2,CTIPO2)
					ENDCASE

					AADD(ADADOS, {CCAMPO1, CCAMPO2})

					(CTAB2)->(DBSKIP())//			ZM2->(DBSKIP())
				ENDDO

//			DO CASE
//				CASE TMP->VERBO == "POST"
				AADD(ADADOSPOST, ADADOS)
//				CASE TMP->VERBO == "PUT"
//					AADD(ADADOSPUT,  ADADOS)					
//				CASE TMP->VERBO == "DELETE"
//					AADD(ADADOSDEL,  ADADOS)					
//			ENDCASE		

				ADADOS := {}
			ENDIF

			//TRATAMENTO PARA QUEBRAR EM MAIS DE UM ARQUIVO PQ A APLICAÇÃO DA MAXIMA NÃO SUPORTA UM ARQUIVO MUITO GRANDE
			IF CPARTICIO == "1"
				IF LEN(ADADOSPOST) >= NMAXIMO
					U_BENVIA(ADADOSPOST  ,"POST"   , CENDPOINT, CPATH,CPARTICIO)
					ADADOSPOST := {}
				ENDIF
			ENDIF

			TMP->(DBSKIP())

		ENDDO

		TMP->(DBCLOSEAREA())
	ENDIF

RETURN(.T.)

/*/{Protheus.doc} U_DCYPTEXT
Função para retornar o texto da SYP 
@type function
@version 
@author Marcelo Alberto Lauschner
@since 26/11/2020
@param cCampo, character, param_description
@param cChave, character, param_description
@param nLimiteLinhas, numeric, param_description
@param lOrdDesc, logical, param_description
@return return_type, return_description
/*/
Function U_DCYPTEXT(cCampo,cChave,nLimiteLinhas,lOrdDesc)

	Local aAreaOld		:= GetArea()
	Local cOutResult   	:= ''
	Local cQry
	Default	nLimiteLinhas   := 100
	Default lOrdDesc 		:= .F.

	If !lOrdDesc
		cQry := "SELECT TOP " + cValToChar(nLimiteLinhas) + " YP_TEXTO "
		cQry += "  FROM " + RetSqlName("SYP")
		cQry += " WHERE D_E_L_E_T_ = ' ' "
		cQry += "   AND YP_CHAVE = '" +cChave + "' "
		cQry += "   AND YP_CAMPO = '" + cCampo + "' "
		cQry += " ORDER BY YP_SEQ "
	Else
		cQry += "SELECT YP_TEXTO "
		cQry += "   FROM ("
		cQry += "         SELECT TOP " + cValToChar(nLimiteLinhas) + " YP_TEXTO "
		cQry += "           FROM " + RetSqlName("SYP")
		cQry += "          WHERE D_E_L_E_T_ = ' ' "
		cQry += "            AND YP_CHAVE = '" +cChave + "' "
		cQry += "            AND YP_CAMPO = '" + cCampo + "' "
		cQry += "       ORDER BY YP_SEQ DESC ) TBL "
	Endif

	TcQuery cQry New Alias "QSYP"

	While !Eof()
		cOutResult	+= QSYP->YP_TEXTO
		QSYP->(DbSkip())
	Enddo
	QSYP->(DbCloseArea())
	RestArea(aAreaOld)

Return cOutResult

/*/{Protheus.doc} U_DCMEMCPO
Função para retornar o valor do conteúdo Memo 
@type function
@version 
@author Marcelo Alberto Lauschner
@since 26/11/2020
@param cInAlias, character, param_description
@param cInChv, character, param_description
@param nIndex, numeric, param_description
@param nInRecno, numeric, param_description
@param cOutCpo, character, param_description
@return return_type, return_description
/*/
Function U_DCMEMCPO(cInAlias,cInChv,nIndex,nInRecno,cOutCpo)

	Local 	aAreaOld	:= GetArea()
	Local 	cOutVlr 	:= ""
	Default nIndex 		:= 1
	Default	nInRecno	:= 0

	DbSelectArea(cInAlias)
	If nInRecno > 0 
		DbGoto(nInRecno)
	Else 
		DbSetOrder(nIndex)
		DbSeek(xFilial(cInAlias)+cInChv)
	Endif 
	cOutVlr 	:= &(cInAlias+"->"+cOutCpo)
	RestArea(aAreaOld)

Return cOutVlr


USER FUNCTION BUSCA_QRY(CCODIGO,CFLAG)

	LOCAL CQUERY := ""

	IF ExistBlock("MAX_QRY01")
		CQUERY := ExecBlock("MAX_QRY01",.F.,.F.,{CCODIGO,CFLAG})
		RETURN(CQUERY)
	ENDIF

//FILIAIS
	IF ALLTRIM(CCODIGO) == "Filiais"

		// ---- Campos do arquivo temporário ---- //
		aCmpArqTmp := {{"M0_CODFIL"   ,"C",04,0 } ,;
			{"M0_NOME"     ,"C",40,0 } ,;
			{"M0_ESTCOB"   ,"C",02,0 } ,;
			{"M0_CGC"      ,"C",14,0 } ,;
			{"VERBO"       ,"C",04,0 }}

		// ----- Alimentando arq. temporário ----- //
		cNomeArq := CriaTrab(aCmpArqTmp,.T.)
		dbUseArea(.T.,, cNomeArq,"TMP",.T.)
		Index On M0_CODFIL To &cNomeArq

		DBSELECTAREA("SM0")
		SM0->(DBGOTOP())
		WHILE !SM0->(EOF())
			RECLOCK("TMP",.T.)
			TMP->M0_CODFIL := SM0->M0_CODFIL
			TMP->M0_NOME   := SM0->M0_NOME
			TMP->M0_ESTCOB := SM0->M0_ESTCOB
			TMP->M0_CGC    := SM0->M0_CGC
			TMP->VERBO     := "POST"
			TMP->(MSUNLOCK())
			SM0->(DBSKIP())
		ENDDO

		TMP->(DBGOTOP())

		CQUERY += "*"
	ENDIF

//CIDADES
	IF ALLTRIM(CCODIGO) == "Cidades"
		CQUERY += " SELECT * FROM " + RETSQLNAME("CC2")+ " CC2"
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
		CQUERY += " AND CC2_CODMUN <> ' '"
		CQUERY += " ORDER BY CC2_EST, CC2_CODMUN"
	ENDIF

//ATIVIDADES
	IF ALLTRIM(CCODIGO) == "Atividades"
		CQUERY += " SELECT X5_CHAVE, X5_DESCRI FROM " + RETSQLNAME("SX5")
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
		CQUERY += " AND X5_TABELA = 'T3'"
		CQUERY += " ORDER BY X5_CHAVE"
	ENDIF

//GRUPOS - CATEGORIAS
	IF ALLTRIM(CCODIGO) $ "Departamentos/Subcategorias/Categorias/Secoes"
//	CQUERY += " SELECT X5_CHAVE, X5_DESCRI FROM " + RETSQLNAME("SX5")	
//	CQUERY += " WHERE D_E_L_E_T_ = ' '"
//	CQUERY += " AND X5_TABELA = 'ZZ'"
//	CQUERY += " ORDER BY X5_CHAVE"
		CQUERY += " SELECT BM_GRUPO, BM_DESC FROM " + RETSQLNAME("SBM")
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
//	CQUERY += " AND B_TABELA = 'ZZ'"
		CQUERY += " ORDER BY BM_GRUPO"
	ENDIF

//CLIENTES
	IF ALLTRIM(CCODIGO) == "Clientes"
		CQUERY += " SELECT A1_EMAIL+' Ped/Parc Min: '+cast(A1_ZPEDMIN as varchar(8))+',00/'+cast(A1_ZPARCMI as varchar(8))+',00'+CASE WHEN A1_ZAUTO = '1' THEN '                        Lib: AUTO' ELSE '                       Lib: MANUAL' END+'                       Desc Cliente: '+cast(A1_DESC as varchar(8))+'%' AS CAMPOEMAIL,* "
		cQuery += "   FROM " + RETSQLNAME("SA1") + " SA1"
		CQUERY += "  WHERE SA1.D_E_L_E_T_ = ' '"
		CQUERY += "    AND A1_VEND <> ' '"
		CQUERY += "    AND A1_MAXPED = '1'"
		//CQUERY += "    AND A1_XXMAXIM = ' '"
		CQUERY += "  ORDER BY A1_COD, A1_LOJA"
	ENDIF

	IF ALLTRIM(CCODIGO) == "Pracas" .OR. ALLTRIM(CCODIGO) == "Regioes"
		CQUERY += " SELECT * FROM " + RETSQLNAME("DA0") + " DA0"
		CQUERY += " WHERE DA0.D_E_L_E_T_ = ' '"
		CQUERY += "	AND DA0_ATIVO = '1' AND DA0.D_E_L_E_T_ = ' ' AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ')"
		CQUERY += " AND DA0_MAXPED = '1'"
		CQUERY += " ORDER BY DA0_CODTAB"
	ENDIF

//PRODUTOS
	IF ALLTRIM(CCODIGO) == "Produtos"
		CQUERY += " SELECT B1_COD AS CODIGO,* FROM " + RETSQLNAME("SB1") + " SB1"
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND B1_MAXPED = '1'"
		CQUERY += "  UNION ALL "
		CQUERY += " SELECT TRIM(B1_COD)+'A' AS CODIGO,* FROM " + RETSQLNAME("SB1") + " SB1"
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND B1_MAXPED = '1'"
		CQUERY += " ORDER BY B1_COD"
	ENDIF

//PRODUTOSHERMANN
	IF ALLTRIM(CCODIGO) == "ProdutosHermann"
		CQUERY += " SELECT B1_COD AS CODIGO,* FROM " + RETSQLNAME("SB1") + " SB1"
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND B1_MAXPED = '1'"
		CQUERY += " ORDER BY B1_COD"
	ENDIF

//PRODUTOSSIMILARES
	IF ALLTRIM(CCODIGO) == "ProdutosSimilares"
		CQUERY += " SELECT TRIM(SB1.B1_COD) AS CODPROD,TRIM(B1.B1_COD) AS CODSIMIL,'S' AS TIPOPROD FROM " + RETSQLNAME("SB1") + " SB1 "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SB1") + " B1 ON (B1.D_E_L_E_T_ <> '*' AND B1.B1_MAXPED = '1' AND SUBSTRING(B1.B1_COD,2,5) = SUBSTRING(SB1.B1_COD,2,5)) "
		CQUERY += " WHERE SB1.D_E_L_E_T_ <> '*' AND SB1.B1_MAXPED = '1' and SB1.B1_COD <> B1.B1_COD "
		CQUERY += " UNION ALL "
		CQUERY += " SELECT TRIM(SB1.B1_COD)+'A' AS CODPROD,TRIM(B1.B1_COD)+'A' AS CODSIMIL,'S' AS TIPOPROD FROM " + RETSQLNAME("SB1") + " SB1 "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SB1") + " B1 ON (B1.D_E_L_E_T_ <> '*' AND B1.B1_MAXPED = '1' AND SUBSTRING(B1.B1_COD,2,5) = SUBSTRING(SB1.B1_COD,2,5)) "
		CQUERY += " WHERE SB1.D_E_L_E_T_ <> '*' AND SB1.B1_MAXPED = '1' and SB1.B1_COD <> B1.B1_COD ORDER BY TRIM(SB1.B1_COD) "
	ENDIF

//ESTOQUES
	IF ALLTRIM(CCODIGO) == "Estoques"
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, SB1.B1_COD AS CODIGO, B2_QATU, B2_RESERVA, B2_QPEDVEN, B2_QACLASS, B2_FILIAL, B2_CM1, B1_UCOM, B2_COD "
		CQUERY += " FROM SB1010 SB1"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0102'),('0103'),('0101'),('0104'),('0105'),('0107')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " LEFT OUTER JOIN SB2010 SB2 "
		cQuery += "     ON B2_COD = B1_COD AND B2_LOCAL = '01' AND SB2.D_E_L_E_T_ = ' ' AND FILIAL.FILIAIS = B2_FILIAL "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' ' "
		CQUERY += " AND SB1.B1_MAXPED = '1' "
		CQUERY += "  UNION ALL "

		/*CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, SB1.B1_COD AS CODIGO, B2_QATU, B2_RESERVA, B2_QPEDVEN, B2_QACLASS, B2_FILIAL, B2_CM1, B1_UCOM, B2_COD "
		CQUERY += " FROM SB1010 SB1"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0101')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " LEFT OUTER JOIN SB2010 SB2 "
		cQuery += "     ON B2_COD = B1_COD AND B2_LOCAL = '02' AND SB2.D_E_L_E_T_ = ' ' AND FILIAL.FILIAIS = B2_FILIAL "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' ' "
		CQUERY += " AND SB1.B1_MAXPED = '1' "
		CQUERY += "  UNION ALL "*/

		CQUERY += " SELECT '0102' AS FILIAL, TRIM(SB1.B1_COD)+'A' AS CODIGO, B2_QATU, B2_RESERVA, B2_QPEDVEN, B2_QACLASS, '0102' as B2_FILIAL, B2_CM1, B1_UCOM, B2_COD "
		CQUERY += " FROM SB2010 SB2"
		CQUERY += " LEFT OUTER JOIN SB1010 SB1 "
		cQuery += "     ON B2_COD = B1_COD AND B2_LOCAL = '02' AND SB2.D_E_L_E_T_ = ' ' AND B2_FILIAL = '0102' "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND SB1.B1_MAXPED = '1' "
		CQUERY += "  UNION ALL "
	//	CQUERY += " SELECT '0107' AS FILIAL, SB1.B1_COD AS CODIGO, B2_QATU, B2_RESERVA, B2_QPEDVEN, B2_QACLASS, '0107' as B2_FILIAL, B2_CM1, B1_UCOM, B2_COD "
	//	CQUERY += " FROM SB2010 SB2"
	//	CQUERY += " LEFT OUTER JOIN SB1010 SB1 "
	//	cQuery += "     ON B2_COD = B1_COD AND B2_LOCAL = '01' AND SB2.D_E_L_E_T_ = ' ' AND B2_FILIAL = '0104' "
	//	CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
	//	CQUERY += " AND SB1.B1_MAXPED = '1' "
	//	CQUERY += "  UNION ALL "		
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, 'H'+SB1.B1_COD AS CODIGO, B2_QATU, B2_RESERVA, B2_QPEDVEN, B2_QACLASS, B2_FILIAL, B2_CM1, B1_UCOM, B2_COD "
		CQUERY += " FROM SB1020 SB1"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0202')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " LEFT OUTER JOIN SB2020 SB2 "
		cQuery += "     ON B2_COD = B1_COD AND B2_LOCAL = '01' AND SB2.D_E_L_E_T_ = ' ' AND FILIAL.FILIAIS = B2_FILIAL "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND SB1.B1_MAXPED = '1' AND SB2.B2_FILIAL = '0202' "
	ENDIF

//	IF ALLTRIM(CCODIGO) == "Estoques"
//		CQUERY += " SELECT * FROM " + RETSQLNAME("SB2") + " SB2"
//		CQUERY += " INNER JOIN " + RETSQLNAME("SB1") + " SB1 ON B1_COD = B2_COD AND B1_LOCPAD = B2_LOCAL AND SB1.D_E_L_E_T_ = ' ' AND B1_MAXPED = '1'"
//		CQUERY += " WHERE SB2.D_E_L_E_T_ = ' '"
//		CQUERY += " ORDER BY B2_COD"
	

//Produtosfiliais
	IF ALLTRIM(CCODIGO) == "ProdutosFiliais"
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, SB1.B1_COD AS CODIGO "
		CQUERY += " FROM SB1010 SB1"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0103'),('0104'),('0105'),('0107')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND SB1.B1_MAXPED = '1' "
		CQUERY += "  UNION ALL "

		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, TRIM(SB2.B2_COD)+'A' AS CODIGO "
		CQUERY += " FROM SB2010 SB2"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0102')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " WHERE SB2.D_E_L_E_T_ = ' '" 
		CQUERY += " AND SB2.B2_FILIAL = '0102' AND SB2.B2_LOCAL = '02' "

		CQUERY += "  UNION ALL "
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, 'H'+SB1.B1_COD AS CODIGO "
		CQUERY += " FROM SB1020 SB1"
		CQUERY += " LEFT OUTER JOIN (VALUES ('0202')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " WHERE SB1.D_E_L_E_T_ = ' '"
		CQUERY += " AND SB1.B1_MAXPED = '1' "
	ENDIF


//FORNECEDORES
	IF ALLTRIM(CCODIGO) == "Fornecedores"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA2") + " SA2"
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
		CQUERY += " AND A2_FILIAL = '"+XFILIAL("SA2")+"'"
		//CQUERY += " AND A2_XXMAXIM = ' '"
		CQUERY += " "
		CQUERY += " ORDER BY A2_COD"
	ENDIF

//PlanosPagamentos              
	IF ALLTRIM(CCODIGO) == "PlanosPagamentos"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SE4") + " SE4"
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
		CQUERY += " AND E4_MAXPED = '1'"
		CQUERY += " ORDER BY E4_CODIGO"
	ENDIF

//PLANOSPAGAMENTOSCLIENTES
/*
	IF ALLTRIM(CCODIGO) == "PlanosPagamentosClientes"
	CQUERY += " SELECT * FROM " + RETSQLNAME("SA1") + " SA1"	
	CQUERY += " WHERE D_E_L_E_T_ = ' '"
	//CQUERY += " AND A1_COND <> ' '"
	CQUERY += " AND A1_VEND <> ' '"
	CQUERY += " AND A1_TABELA <> ' '"
	//CQUERY += " AND A1_XXMAXIM = ' '"
	CQUERY += " ORDER BY A1_COD, A1_LOJA"
	ENDIF
*/
//ClientesCreditosDisponiveis   
	IF ALLTRIM(CCODIGO) == "ClientesCreditosDisponiveis"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA1") + " SA1"
		CQUERY += " WHERE D_E_L_E_T_ = ' '"
		CQUERY += " AND A1_VEND <> ' '"
		CQUERY += " AND A1_MAXPED = '1'"
		CQUERY += " ORDER BY A1_COD, A1_LOJA"
	ENDIF

//HISTORICOSPEDIDOSCAPAS
	IF ALLTRIM(CCODIGO) == "HistoricosPedidosCapas"
		CQUERY += " SELECT C5_SITDEC, C5_ZBOLETO, C5_TABELA, C5_XXFORMA, C5_XXPEDMA, C5_NOTA, C5_LIBEROK, C5_BLQ, C5_XXTIPO, C5_LOGALT, SF2.R_E_C_N_O_ AS RECNOSF2,"
		cQuery += "        SC5.D_E_L_E_T_ REG_DEL,C5_VEND1, C5_FILIAL, C5_CLIENTE, C5_LOJACLI, C5_NUM, SUM(C6_VALOR * ((B1_IPI+100)/100)) TOTAL, C5_EMISSAO, C5_CONDPAG, C5_TRANSP,CASE WHEN SUM(CASE WHEN F4_DUPLIC = 'N' THEN 1 ELSE 0 END) > 0 THEN 5 ELSE 1 END AS CONDVENDA, "
		cQuery += "        C5_COMIS1, SUM(C6_PRUNIT * C6_QTDVEN * ((B1_IPI+100)/100)) TABELA, C5_ZDTMAX, SUBSTRING(C5_ZHRMAX,1,2) HORA, SUBSTRING(C5_ZHRMAX,4,2) MINUTO, F2_VALBRUT, F2_EMISSAO, XEV_DTENTR DTENTREGA, SUBSTRING(F2_HORA,1,2) HORAFAT, SUBSTRING(F2_HORA,4,2) MINUTOFAT, "
		cQuery += "  SUBSTRING(XEV_DTENTR,7,2)+'/'+SUBSTRING(XEV_DTENTR,5,2)+'/'+SUBSTRING(XEV_DTENTR,1,4) DATAENTREGA, CASE WHEN SUM(CASE WHEN F4_DUPLIC = 'N' THEN 1 ELSE 0 END) > 0 THEN 'Brinde' ELSE 'Venda' END AS TIPOPEDIDO "
		cQuery += "   FROM " + RETSQLNAME("SC5") + " SC5"
		CQUERY += "  INNER JOIN " + RETSQLNAME("SC6") + " SC6 "
		cQuery += "     ON C6_FILIAL = C5_FILIAL "
		cQuery += "    AND C6_NUM = C5_NUM "
		CQUERY += "  INNER JOIN " + RETSQLNAME("SF4") + " SF4"
		cQuery += "     ON F4_FILIAL = C6_FILIAL "
		cQuery += "    AND F4_CODIGO = C6_TES "
		cQuery += "	   AND SF4.D_E_L_E_T_ = ' ' "
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 "
		cQuery += "     ON C6_PRODUTO = B1_COD "
		cQuery += "	   AND SB1.D_E_L_E_T_ = ' ' "
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SF2") + " SF2 "
		cQuery += "     ON F2_FILIAL = C5_FILIAL "
		cQuery += "    AND F2_DOC = C5_NOTA AND F2_SERIE = '1' AND SF2.D_E_L_E_T_ = '' AND C5_NOTA <> '' "
		CQUERY += "  LEFT OUTER JOIN CONDORCTEXNFS CTE ON (CTE.XCN_CHVNFS = F2_CHVNFE AND CTE.D_E_L_E_T_ = ' ') "
		cQuery += "  LEFT OUTER JOIN CONDOREVENTOS EVE ON (CTE.XCN_CHVCTE = XEV_CHAVE AND XEV_EVENT = '110180' AND XEV_SEQEVE = '1' AND EVE.D_E_L_E_T_ = ' ') "
		CQUERY += "  WHERE C5_EMISSAO >= '"+DTOS(DATE()-180)+ "'" // Retirado o d_e_l_e_t_ em 19/10/2020
		CQUERY += "  GROUP BY C5_SITDEC, C5_ZBOLETO, C5_TABELA, C5_XXFORMA, C5_XXPEDMA, C5_NOTA, C5_LIBEROK, C5_BLQ, "
		cQuery += "          SC5.D_E_L_E_T_ ,C5_VEND1, C5_FILIAL, C5_CLIENTE, C5_LOJACLI, C5_NUM, C5_EMISSAO, C5_CONDPAG, C5_TRANSP, C5_COMIS1, C5_XXTIPO,C5_LOGALT,B1_IPI,C5_ZHRMAX,C5_ZDTMAX,F2_HORA,F2_VALBRUT,F2_EMISSAO,XEV_DTENTR,F4_DUPLIC,SF2.R_E_C_N_O_"
		CQUERY += "  ORDER BY C5_FILIAL, C5_NUM"

	ENDIF

//HISTORICOSPEDIDOSCAPASDiario
	IF ALLTRIM(CCODIGO) == "HistoricosPedidosCapasDiario"
		CQUERY += " SELECT C5_SITDEC, C5_ZBOLETO, C5_TABELA, C5_XXFORMA, C5_XXPEDMA, C5_NOTA, C5_LIBEROK, C5_BLQ, C5_XXTIPO, C5_LOGALT, SF2.R_E_C_N_O_ AS RECNOSF2, "
		cQuery += "        SC5.D_E_L_E_T_ REG_DEL,C5_VEND1, C5_FILIAL, C5_CLIENTE, C5_LOJACLI, C5_NUM, SUM(C6_VALOR * ((B1_IPI+100)/100) ) TOTAL, C5_EMISSAO, C5_CONDPAG, C5_TRANSP,CASE WHEN SUM(CASE WHEN F4_DUPLIC = 'N' THEN 1 ELSE 0 END) > 0 THEN 5 ELSE 1 END AS CONDVENDA, "
		cQuery += "        C5_COMIS1, SUM(C6_PRUNIT * C6_QTDVEN * ((B1_IPI+100)/100) ) TABELA, C5_ZDTMAX, SUBSTRING(C5_ZHRMAX,1,2) HORA, SUBSTRING(C5_ZHRMAX,4,2) MINUTO, F2_VALBRUT, F2_EMISSAO, XEV_DTENTR DTENTREGA, SUBSTRING(F2_HORA,1,2) HORAFAT, SUBSTRING(F2_HORA,4,2) MINUTOFAT, "
		cQuery += "  SUBSTRING(XEV_DTENTR,7,2)+'/'+SUBSTRING(XEV_DTENTR,5,2)+'/'+SUBSTRING(XEV_DTENTR,1,4) DATAENTREGA, CASE WHEN SUM(CASE WHEN F4_DUPLIC = 'N' THEN 1 ELSE 0 END) > 0 THEN 'Brinde' ELSE 'Venda' END AS TIPOPEDIDO "
		cQuery += "   FROM " + RETSQLNAME("SC5") + " SC5"
		CQUERY += "  INNER JOIN " + RETSQLNAME("SC6") + " SC6 "
		cQuery += "     ON C6_FILIAL = C5_FILIAL "
		cQuery += "    AND C6_NUM = C5_NUM "
		CQUERY += "  INNER JOIN " + RETSQLNAME("SF4") + " SF4"
		cQuery += "     ON F4_FILIAL = C6_FILIAL "
		cQuery += "    AND F4_CODIGO = C6_TES "
		cQuery += "	   AND SF4.D_E_L_E_T_ = ' ' "
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 "
		cQuery += "     ON C6_PRODUTO = B1_COD "
		cQuery += "	   AND SB1.D_E_L_E_T_ = ' ' "
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SF2") + " SF2 "
		cQuery += "     ON F2_FILIAL = C5_FILIAL "
		cQuery += "    AND F2_DOC = C5_NOTA AND F2_SERIE = '1' AND SF2.D_E_L_E_T_ = '' AND C5_NOTA <> '' "
		CQUERY += "  LEFT OUTER JOIN CONDORCTEXNFS CTE ON (CTE.XCN_CHVNFS = F2_CHVNFE AND CTE.D_E_L_E_T_ = ' ') "
		cQuery += "  LEFT OUTER JOIN CONDOREVENTOS EVE ON (CTE.XCN_CHVCTE = XEV_CHAVE AND XEV_EVENT = '110180' AND XEV_SEQEVE = '1' AND EVE.D_E_L_E_T_ = ' ') "
		CQUERY += "  WHERE C5_EMISSAO >= '"+DTOS(DATE()-5)+ "'" // Retirado o d_e_l_e_t_ em 19/10/2020
		CQUERY += "  GROUP BY C5_SITDEC, C5_ZBOLETO, C5_TABELA, C5_XXFORMA, C5_XXPEDMA, C5_NOTA, C5_LIBEROK, C5_BLQ, "
		cQuery += "          SC5.D_E_L_E_T_ ,C5_VEND1, C5_FILIAL, C5_CLIENTE, C5_LOJACLI, C5_NUM, C5_EMISSAO, C5_CONDPAG, C5_TRANSP, C5_COMIS1, C5_XXTIPO,C5_LOGALT,B1_IPI,C5_ZHRMAX,C5_ZDTMAX,F2_HORA,F2_VALBRUT,F2_EMISSAO,XEV_DTENTR,F4_DUPLIC,SF2.R_E_C_N_O_"
		CQUERY += "  ORDER BY C5_FILIAL, C5_NUM"

	ENDIF

//HistoricosPedidosItens.
	IF ALLTRIM(CCODIGO) == "HistoricosPedidosItens"
		CQUERY += " SELECT C5_EMISSAO, C6_COMIS1, C5_XXPEDMA, C6_FILIAL, C6_NUM, C6_QTDVEN, C6_QTDENT, C6_ITEM, (C6_PRCVEN * ((B1_IPI+100)/100)) C6_PRCVEN, CASE WHEN SC6.C6_LOCAL = '02' THEN TRIM(C6_PRODUTO)+'A' ELSE C6_PRODUTO END AS C6_PRODUTO, (C6_PRUNIT * ((B1_IPI+100)/100)) C6_PRUNIT, C5_COMIS1 "
		cQuery += "   FROM " + RETSQLNAME("SC6") + " SC6"
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 "
		cQuery += "     ON C6_PRODUTO = B1_COD "
		cQuery += "	   AND SB1.D_E_L_E_T_ = ' ' "
		CQUERY += "  INNER JOIN  " + RETSQLNAME("SC5") + " SC5 "
		cQuery += "     ON C5_FILIAL = C6_FILIAL "
		cQuery += "    AND C5_NUM = C6_NUM "
		cQuery += "    AND C5_EMISSAO >= '"+DTOS(DATE()-180)+ "'"
		CQUERY += "  WHERE SC6.D_E_L_E_T_ = ' ' "
		CQUERY += "  ORDER BY C6_FILIAL, C6_NUM, C6_ITEM"
	ENDIF

//HistoricosPedidosItensDiario.
	IF ALLTRIM(CCODIGO) == "HistoricosPedidosItensDiario"
		CQUERY += " SELECT C5_EMISSAO, C6_COMIS1, C5_XXPEDMA, C6_FILIAL, C6_NUM, C6_QTDVEN, C6_QTDENT, C6_ITEM, (C6_PRCVEN * ((B1_IPI+100)/100)) C6_PRCVEN, CASE WHEN SC6.C6_LOCAL = '02' THEN TRIM(C6_PRODUTO)+'A' ELSE C6_PRODUTO END AS C6_PRODUTO, (C6_PRUNIT * ((B1_IPI+100)/100)) C6_PRUNIT, C5_COMIS1 "
		cQuery += "   FROM " + RETSQLNAME("SC6") + " SC6"
		CQUERY += "  LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 "
		cQuery += "     ON C6_PRODUTO = B1_COD "
		cQuery += "	   AND SB1.D_E_L_E_T_ = ' ' "
		CQUERY += "  INNER JOIN  " + RETSQLNAME("SC5") + " SC5 "
		cQuery += "     ON C5_FILIAL = C6_FILIAL "
		cQuery += "    AND C5_NUM = C6_NUM "
		cQuery += "    AND C5_EMISSAO >= '"+DTOS(DATE()-5)+ "'"
		CQUERY += "  WHERE SC6.D_E_L_E_T_ = ' ' "
		CQUERY += "  ORDER BY C6_FILIAL, C6_NUM, C6_ITEM"
	ENDIF

//HistoricoPedidosCortes
	IF Alltrim(CCODIGO) == "HistoricosPedidosCortes"
		CQUERY += " SELECT C5_EMISSAO, C6_COMIS1, C5_XXPEDMA,C6_FILIAL, C6_NUM, C6_QTDVEN - C6_QTDENT QUANT,C6_QTDVEN ,C6_ITEM, C6_PRCVEN, CASE WHEN SC6.C6_LOCAL = '02' THEN TRIM(C6_PRODUTO)+'A' ELSE C6_PRODUTO END AS C6_PRODUTO "
		cQuery += "   FROM " + RETSQLNAME("SC6") + " SC6 "
		CQUERY += "  INNER JOIN  " + RETSQLNAME("SC5") + " SC5 "
		cQuery += "     ON C5_FILIAL = C6_FILIAL "
		cQuery += "    AND C5_XXPEDMA <>  ' ' " // Filtra pedidos integrados apenas
		cQuery += "    AND C5_NUM = C6_NUM "
		cQuery += "    AND C5_EMISSAO >= '"+DTOS(DATE()-180)+"'"
		CQUERY += "  WHERE SC6.D_E_L_E_T_ = '*' "  // 06/10/2020 - considera itens deletados do pedido integrado
		CQUERY += "  UNION ALL"
		CQUERY += " SELECT C5_EMISSAO, C6_COMIS1, C5_XXPEDMA,C6_FILIAL, C6_NUM, C6_ZQTDMAX - C6_QTDVEN QUANT,C6_QTDVEN ,C6_ITEM, C6_PRCVEN, CASE WHEN SC6.C6_LOCAL = '02' THEN TRIM(C6_PRODUTO)+'A' ELSE C6_PRODUTO END AS C6_PRODUTO "
		cQuery += "   FROM " + RETSQLNAME("SC6") + " SC6 "
		CQUERY += "  INNER JOIN  " + RETSQLNAME("SC5") + " SC5 "
		cQuery += "     ON C5_FILIAL = C6_FILIAL "
		cQuery += "    AND C5_XXPEDMA <>  ' ' " // Filtra pedidos integrados apenas
		cQuery += "    AND C5_NUM = C6_NUM "
		cQuery += "    AND C5_EMISSAO >= '"+DTOS(DATE()-180)+"'"
		CQUERY += "  WHERE SC6.D_E_L_E_T_ = ' ' AND SC6.C6_ZQTDMAX <> '' and (C6_ZQTDMAX - C6_QTDVEN) > '0' "  // 24/01/2021 - considera somente itens ativos apos alteracao na tabela (novo campo)

		CQUERY += "  ORDER BY C6_FILIAL, C6_NUM, C6_ITEM"
	ENDIF

//Supervisores
	IF ALLTRIM(CCODIGO) == "Supervisores"
		CQUERY += " SELECT A3_SUPER, A3_GEREN FROM " + RETSQLNAME("SA3") + " SA3"
		CQUERY += " WHERE SA3.D_E_L_E_T_ = ' '"
		CQUERY += " AND (A3_SUPER <> ' ' OR A3_GEREN <> ' ')"
		CQUERY += " AND A3_MAXPED = '1'"
		CQUERY += " GROUP BY A3_SUPER, A3_GEREN"
		CQUERY += " ORDER BY A3_SUPER"
	ENDIF

//Usuaris
	IF ALLTRIM(CCODIGO) == "Usuaris"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA3") + " SA3"
		CQUERY += " WHERE SA3.D_E_L_E_T_ = ' '"
		CQUERY += " AND A3_MAXPED = '1'"
		CQUERY += " ORDER BY A3_COD"
	ENDIF

//TitulosAbertos                          
	IF ALLTRIM(CCODIGO) == "PrestacoesTitulos"
		CQUERY += " SELECT SF2.R_E_C_N_O_ AS RECNOSF2,* FROM " + RETSQLNAME("SE1") + " SE1"
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SF2") + " SF2 "
		cQuery += "     ON F2_FILIAL = E1_FILORIG "
		cQuery += "    AND F2_DOC = E1_NUM AND F2_SERIE = '1' AND SF2.D_E_L_E_T_ = '' "
		CQUERY += " WHERE SE1.D_E_L_E_T_ = ' '"
		CQUERY += " AND E1_SALDO > 1"
		CQUERY += " AND E1_TIPO <> 'RA' "
		CQUERY += " AND E1_VEND1 <> ' ' "
		CQUERY += " AND E1_EMISSAO >= '20180101'"
		CQUERY += " ORDER BY E1_NUM"
	ENDIF

//TitulosBaixas                          
	IF ALLTRIM(CCODIGO) == "PrestacoesTitulosBaixas"
		CQUERY += " SELECT SF2.R_E_C_N_O_ AS RECNOSF2,* FROM " + RETSQLNAME("SE1") + " SE1"
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SF2") + " SF2 "
		cQuery += "     ON F2_FILIAL = E1_FILORIG "
		cQuery += "    AND F2_DOC = E1_NUM AND F2_SERIE = '1' AND SF2.D_E_L_E_T_ = '' "
		CQUERY += " WHERE SE1.D_E_L_E_T_ = ' '"
		CQUERY += " AND E1_SALDO < 1"
		CQUERY += " AND E1_TIPO <> 'RA' "
		CQUERY += " AND E1_VEND1 <> ' '"
		CQUERY += " AND E1_EMISSAO >= '20180101'"
		CQUERY += " ORDER BY E1_NUM"
	ENDIF

//TABELASPRECOS
	IF ALLTRIM(CCODIGO) == "TabelasPrecos"
		CQUERY += " SELECT DA1_FILIAL, DA1_CODTAB, DA1_CODPRO, DA1_CODPRO AS CODIGO, DA0_DATDE, DA0_DATATE, MAX(DA1_PRCVEN) * (100-MIN(ISNULL(ACP_PERDES,0)))*0.01 DA1_PRCVEN, DA1_ZPDM FROM " + RETSQLNAME("DA1") + " DA1"
		CQUERY += " INNER JOIN " + RETSQLNAME("DA0") + " DA0 ON DA0_FILIAL = DA1_FILIAL AND DA0_CODTAB = DA1_CODTAB AND DA0_ATIVO = '1' AND DA0.D_E_L_E_T_ = ' ' AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ') AND DA0_MAXPED = '1'"
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("ACO") + " ACO ON (ACO_CODTAB = DA0_CODTAB AND ACO.ACO_MSBLQL = '2' AND ACO.D_E_L_E_T_ = ' ' AND ACO_DATDE <= '"+DTOS(DATE())+"' AND ACO_DATATE >= '"+DTOS(DATE())+"') "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("ACP") + " ACP ON (ACP_CODREG = ACO_CODREG AND ACP.D_E_L_E_T_ = ' ' AND ACP_CODPRO = DA1_CODPRO) "
		CQUERY += " WHERE DA1.D_E_L_E_T_ = ' ' "
		CQUERY += " GROUP BY DA1_FILIAL, DA1_CODTAB, DA1_CODPRO, DA0_DATDE, DA0_DATATE, DA1_ZPDM "
		CQUERY += "  UNION ALL "
		CQUERY += " SELECT DA1_FILIAL, DA1_CODTAB, DA1_CODPRO, TRIM(DA1_CODPRO)+'A' AS CODIGO, DA0_DATDE, DA0_DATATE, MAX(DA1_PRCVEN) * (100-MIN(ISNULL(ACP_PERDES,0)))*0.01 DA1_PRCVEN, DA1_ZPDM FROM " + RETSQLNAME("DA1") + " DA1"
		CQUERY += " INNER JOIN " + RETSQLNAME("DA0") + " DA0 ON DA0_FILIAL = DA1_FILIAL AND DA0_CODTAB = DA1_CODTAB AND DA0_ATIVO = '1' AND DA0.D_E_L_E_T_ = ' ' AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ') AND DA0_MAXPED = '1'"
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("ACO") + " ACO ON (ACO_CODTAB = DA0_CODTAB AND ACO.ACO_MSBLQL = '2' AND ACO.D_E_L_E_T_ = ' ' AND ACO_DATDE <= '"+DTOS(DATE())+"' AND ACO_DATATE >= '"+DTOS(DATE())+"') "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("ACP") + " ACP ON (ACP_CODREG = ACO_CODREG AND ACP.D_E_L_E_T_ = ' ' AND ACP_CODPRO = DA1_CODPRO) "
		CQUERY += " WHERE DA1.D_E_L_E_T_ = ' ' AND DA1.DA1_CODTAB IN ('101','126') "
		CQUERY += " GROUP BY DA1_FILIAL, DA1_CODTAB, DA1_CODPRO, DA0_DATDE, DA0_DATATE, DA1_ZPDM "
		CQUERY += " ORDER BY DA1_FILIAL, DA1_CODTAB, DA1_CODPRO "
	ENDIF

//TABELASPRECOSCLIENTES
	IF ALLTRIM(CCODIGO) == "TabelasPrecosClientes"
//		CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '101' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0103')) AS FILIAL(FILIAIS) ON (0=0)"
//		CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'F'"
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '101' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0103')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'F' " //Todos PF
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '108' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0101'),('0104')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000126','000101','000257','000160','000183','000258','000256','000158','000115') " //Equipe PJ SP Saindo SC
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '125' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0103'),('0105')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000126','000101','000257','000160','000183','000258','000256','000158','000115') " //Equipe PJ SP saindo SP
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '109' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0101'),('0104')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000163','000143','000157','000173','000147','000259')  " //Equipe PJ RJ
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, 'H103' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0202')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000126','000101','000257','000160','000183','000258','000256','000158','000115') " //Hermann Equipe PJ SP
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, 'H104' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0202')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000163','000143','000157','000173','000147','000259')  " //Hermann Equipe PJ RJ
CQUERY += " UNION ALL "
CQUERY += " SELECT A1_COD+A1_LOJA AS CODCLI, FILIAIS AS CODFILIALNF, '126' AS NUMREGIAO FROM SA1010 LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0104')) AS FILIAL(FILIAIS) ON (0=0) "
CQUERY += " WHERE D_E_L_E_T_ = ' ' AND A1_MAXPED = '1' AND A1_PESSOA = 'J' AND A1_VEND IN ('000132','000133','000252','000172','845512','000220','000260','000248') " //Equipe PJ Fpolis e Cristiano

	ENDIF

//RestricoesVendas
	IF ALLTRIM(CCODIGO) == "RestricoesVendas"

CQUERY += " SELECT '0010000000'+ROW_NUMBER() over (ORDER BY SA1.A1_COD+SA1.A1_LOJA) AS 'CODRESTRICAO',  "
CQUERY += " SA1.A1_COD+SA1.A1_LOJA AS 'CODCLI',  "
CQUERY += " trim(DA0_CODTAB) AS NUMREGIAO, '' AS CODFILIAL FROM DA0010 DA0   "
CQUERY += " LEFT OUTER JOIN SA1010 SA1 ON (SA1.A1_MAXPED = '1' AND SA1.A1_PESSOA = 'F' AND SA1.D_E_L_E_T_ <> '*')   "
CQUERY += " WHERE DA0.D_E_L_E_T_ = '' AND DA0.DA0_MAXPED = '1' AND DA0.DA0_CODTAB <> '101'  "
/*CQUERY += " UNION ALL  "
CQUERY += " SELECT '0020000000'+ROW_NUMBER() over (ORDER BY SA1.A1_COD+SA1.A1_LOJA) AS 'CODRESTRICAO',  "
CQUERY += " SA1.A1_COD+SA1.A1_LOJA AS 'CODCLI',  "
CQUERY += " trim(DA0_CODTAB) AS NUMREGIAO, '' AS CODFILIAL FROM DA0010 DA0   "
CQUERY += " LEFT OUTER JOIN SA1010 SA1 ON (SA1.A1_MAXPED = '1' AND SA1.A1_PESSOA = 'J' AND SA1.D_E_L_E_T_ <> '*')   "
CQUERY += " WHERE DA0.D_E_L_E_T_ = '' AND DA0.DA0_MAXPED = '1' AND DA0.DA0_CODTAB = '101'  "*/
CQUERY += " UNION ALL  "
CQUERY += " SELECT '0030000000'+ROW_NUMBER() over (ORDER BY SA1.A1_COD+SA1.A1_LOJA) AS 'CODRESTRICAO',  "
CQUERY += " SA1.A1_COD+SA1.A1_LOJA AS 'CODCLI',  "
CQUERY += " 'H'+trim(DA0_CODTAB) AS NUMREGIAO, '' AS CODFILIAL FROM DA0020 DA0   "
CQUERY += " LEFT OUTER JOIN SA1010 SA1 ON (SA1.A1_MAXPED = '1' AND SA1.A1_PESSOA = 'F' AND SA1.D_E_L_E_T_ <> '*')   "
CQUERY += " WHERE DA0.D_E_L_E_T_ = '' AND DA0.DA0_MAXPED = '1'   "
	ENDIF


//TRIBUTACOESERP
	IF ALLTRIM(CCODIGO) == "TabelasTributacoesERP"
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, ESTADOS.ESTADO AS ESTADO, SB1.B1_COD AS B1_COD, "
		CQUERY += " CASE WHEN SB1.B1_GRPTI IN ('0009','0010','0011') AND ESTADO = 'PR' THEN '2' "
		CQUERY += " ELSE '1' END AS CODST "
		CQUERY += " FROM (VALUES ('CE'),('PE'),('RJ'),('AC'),('MS'),('MG'),('PR'),('GO'),('TO'),('MT'),('AL'),('ES'),('RO'),('DF'),('RN'),('RS'),('MA'),('RR'),('SP'),('AM'),('PI'),('BA'),('PB'),('AP'),('SE'),('SC')) AS ESTADOS(ESTADO) "
		CQUERY += " LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0103'),('0104'),('0105')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 ON SB1.D_E_L_E_T_ = ' ' AND SB1.B1_MAXPED = '1' "
	ENDIF

//TRIBUTACOESERPINCREMENTAL
	IF ALLTRIM(CCODIGO) == "TabelasTributacoesERPDiario"
		CQUERY += " SELECT FILIAL.FILIAIS AS FILIAL, ESTADOS.ESTADO AS ESTADO, SB1.B1_COD AS B1_COD, "
		CQUERY += " CASE WHEN SB1.B1_GRPTI IN ('0009','0010','0011') AND ESTADO = 'PR' THEN '2' "
		CQUERY += " ELSE '1' END AS CODST "
		CQUERY += " FROM (VALUES ('CE'),('PE'),('RJ'),('AC'),('MS'),('MG'),('PR'),('GO'),('TO'),('MT'),('AL'),('ES'),('RO'),('DF'),('RN'),('RS'),('MA'),('RR'),('SP'),('AM'),('PI'),('BA'),('PB'),('AP'),('SE'),('SC')) AS ESTADOS(ESTADO) "
		CQUERY += " LEFT OUTER JOIN (VALUES ('0101'),('0102'),('0103'),('0104'),('0105')) AS FILIAL(FILIAIS) ON (0=0) "
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SB1") + " SB1 ON SB1.D_E_L_E_T_ = ' ' AND SB1.B1_MAXPED = '1' AND SB1.B1_XXMAXIM = ' ' "
	ENDIF

//TRANSPORTADORA
	IF ALLTRIM(CCODIGO) == "Transportadoras"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA4") + " SA4"
		CQUERY += " WHERE SA4.D_E_L_E_T_ = ' '"
		CQUERY += " ORDER BY A4_COD"
	ENDIF

//CobrancasClientes
	IF ALLTRIM(CCODIGO) == "CobrancasClientes"
		CQUERY += " SELECT A1_COD, A1_LOJA, 'S' FORMA "
		cQuery += "   FROM " + RETSQLNAME("SA1") + " SA1"
		CQUERY += "  WHERE SA1.D_E_L_E_T_ = ' '"
		CQUERY += "    AND A1_VEND <> ' '"
		CQUERY += "    AND A1_MAXPED = '1'"
//	CQUERY += " AND A1_XXMAXIM = ' '"
		CQUERY += "  UNION ALL"
		CQUERY += " SELECT A1_COD, A1_LOJA, 'N' FORMA "
		cQuery += "   FROM " + RETSQLNAME("SA1") + " SA1"
		CQUERY += "  WHERE SA1.D_E_L_E_T_ = ' '"
		CQUERY += "    AND A1_VEND <> ' '"
		CQUERY += "    AND A1_MAXPED = '1'"
//	CQUERY += " AND A1_XXMAXIM = ' '"	
//	CQUERY += " ORDER BY A1_COD, A1_LOJA"     
	ENDIF

	IF ALLTRIM(CCODIGO) == "ClientesRegioes"
		CQUERY += " SELECT * FROM " + RETSQLNAME("DA0") + " DA0 "
		CQUERY += "  INNER JOIN " + RETSQLNAME("SA1") + " SA1 "
		cQuery += "     ON A1_TABELA = DA0_CODTAB "
		cQuery += "    AND SA1.D_E_L_E_T_ = ' ' "
		cQuery += "    AND A1_VEND <> ' ' "
		cQuery += "    AND A1_MAXPED = '1'"
		CQUERY += "  WHERE DA0.D_E_L_E_T_ = ' '"
		CQUERY += "    AND DA0_ATIVO = '1'
		CQUERY += "    AND DA0_MAXPED = '1'"
		CQUERY += "    AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ')"
//	CQUERY += " ORDER BY DA1_CODTAB, DA1_CODPRO"
/*
	CQUERY += " SELECT * FROM ("
	CQUERY += " SELECT ACT_CODTAB, A1_COD, A1_LOJA FROM " + RETSQLNAME("ACS") + " ACS"
	CQUERY += " INNER JOIN " + RETSQLNAME("ACT") + " ACT ON ACT_FILIAL = ACS_FILIAL AND ACT_CODREG = ACS_CODREG AND ACT.D_E_L_E_T_ = ' '  AND ACT_CODTAB <> ' '"   
	CQUERY += " INNER JOIN " + RETSQLNAME("DA0") + " DA0 ON DA0_CODTAB = ACT_CODTAB AND DA0.D_E_L_E_T_ = ' ' AND DA0_FILIAL = '"+XFILIAL("DA0")+"' AND DA0_ATIVO = '1' AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ')"
	CQUERY += " INNER JOIN " + RETSQLNAME("SA1") + " SA1 ON ((ACS_CODCLI = A1_COD AND ACS_LOJA = A1_LOJA) OR  ACS_GRPVEN = A1_GRPVEN  AND ACS_CODCLI = ' ' AND ACS_LOJA = ' ')
	CQUERY += " WHERE ACS.D_E_L_E_T_ = ' ' 
	CQUERY += " AND ACS_FILIAL = '"+XFILIAL("ACS")+"'"	                                                                                                                                  
	CQUERY += " GROUP BY ACT_CODTAB, A1_COD, A1_LOJA"
	CQUERY += " ORDER BY A1_COD, A1_LOJA, ACT_CODTAB"                     
	CQUERY += ") WHERE A1_COD <> ' '"                                     
*/	
		Memowrite("C:\temp\REL-"+STRTRAN(TIME(),":","-")+".txt", CQUERY)
	ENDIF

	IF ALLTRIM(CCODIGO) == "PlanosPagamentosClientes"//"PlanosPagamentosRegioes"
		CQUERY += " SELECT * FROM ("
		CQUERY += " SELECT A1_TABELA, A1_COD, A1_LOJA, ACT_CONDPG "
		cQuery += "   FROM " + RETSQLNAME("ACS") + " ACS"
		CQUERY += "  INNER JOIN " + RETSQLNAME("ACT") + " ACT "
		cQuery += "     ON ACT_FILIAL = ACS_FILIAL "
		cQuery += "    AND ACT_CODREG = ACS_CODREG "
		cQuery += "    AND ACT.D_E_L_E_T_ = ' '"
		CQUERY += "  INNER JOIN " + RETSQLNAME("SA1") + " SA1 "
		cQuery += "     ON ACS_CODCLI = A1_COD "
		cQuery += "    AND ACS_LOJA = A1_LOJA "
		cQuery += "    AND SA1.D_E_L_E_T_ = ' ' "
		cQuery += "    AND A1_MAXPED = '1'"
		CQUERY += "  WHERE ACS.D_E_L_E_T_ = ' '
		CQUERY += "  GROUP BY A1_TABELA, A1_COD, A1_LOJA, ACT_CONDPG"
		CQUERY += ") TMP WHERE A1_COD <> ' '"
		CQUERY += " AND ACT_CONDPG <> ' '"

	ENDIF

	IF ALLTRIM(CCODIGO) == "Veiculos"
		CQUERY += " SELECT * FROM " + RETSQLNAME("DA3") + " DA3 "
		CQUERY += " WHERE DA3.D_E_L_E_T_ = ' '"
		CQUERY += " AND DA3_ATIVO = '1'"
	ENDIF

	IF ALLTRIM(CCODIGO) == "Nfent" .OR. ALLTRIM(CCODIGO) == "EstornoComissao"
		CQUERY += " SELECT F1_VALMERC, SF2.R_E_C_N_O_ AS RECNOSF2, SF1.R_E_C_N_O_ AS RECNOSF1, F1_FILIAL, F1_DTDIGIT, F1_ESPECIE, F1_SERIE, F1_DOC, F1_MENNOTA, F2_CARGA, F2_VEND1, F1_EST, F1_PBRUTO, F1_FRETE FROM " + RETSQLNAME("SD1") + " SD1 "
		CQUERY += " INNER JOIN " + RETSQLNAME("SF1") + " SF1  ON SF1.D_E_L_E_T_ = ' ' AND F1_FILIAL = D1_FILIAL AND F1_DOC = D1_DOC AND F1_SERIE = D1_SERIE AND F1_FORNECE = D1_FORNECE AND F1_LOJA = D1_LOJA AND F1_DTDIGIT >= '"+DTOS(DATE()-60)+"'
		CQUERY += " INNER JOIN " + RETSQLNAME("SD2") + " SD2  ON SD2.D_E_L_E_T_ = ' ' AND D1_FILIAL = D2_FILIAL AND D1_NFORI = D2_DOC AND D1_SERIORI = D2_SERIE AND D1_ITEMORI = D2_ITEM
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2  ON SF2.D_E_L_E_T_ = ' ' AND F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND F2_CLIENTE = D2_CLIENTE AND F2_LOJA = D2_LOJA
		CQUERY += " WHERE SD1.D_E_L_E_T_ = ' '
		CQUERY += " AND D1_TIPO = 'D'
		CQUERY += "GROUP BY F1_VALMERC, SF2.R_E_C_N_O_, SF1.R_E_C_N_O_, F1_FILIAL, F1_DTDIGIT, F1_ESPECIE, F1_SERIE, F1_DOC, F1_MENNOTA, F2_CARGA, F2_VEND1, F1_EST, F1_PBRUTO, F1_FRETE"
	ENDIF

	IF ALLTRIM(CCODIGO) == "ItensDevolucao"
		CQUERY += " SELECT D1_CUSTO, D1_DOC, D1_NFORI, D2_DOC, D2_SERIE, SF1.R_E_C_N_O_ AS RECNOSF1, F1_FILIAL, F1_DTDIGIT, F1_ESPECIE, F1_SERIE, F1_DOC, F1_MENNOTA, F2_CARGA, F2_VEND1, F1_EST, F1_PBRUTO, F1_FRETE, D1_COD, D1_QUANT, SF2.R_E_C_N_O_ AS RECNOSF2, SD2.R_E_C_N_O_ AS RECNOSD2, B1_CODBAR, F2_CARGA, D2_PEDIDO, D1_VUNIT, D1_CUSTO, D1_VALIPI FROM " + RETSQLNAME("SD1") + " SD1 "
		CQUERY += " INNER JOIN " + RETSQLNAME("SF1") + " SF1  ON SF1.D_E_L_E_T_ = ' ' AND F1_FILIAL = D1_FILIAL AND F1_DOC = D1_DOC AND F1_SERIE = D1_SERIE AND F1_FORNECE = D1_FORNECE AND F1_LOJA = D1_LOJA AND F1_DTDIGIT >= '"+DTOS(DATE()-60)+"'
		CQUERY += " INNER JOIN " + RETSQLNAME("SD2") + " SD2  ON SD2.D_E_L_E_T_ = ' ' AND D1_FILIAL = D2_FILIAL AND D1_NFORI = D2_DOC AND D1_SERIORI = D2_SERIE AND D1_ITEMORI = D2_ITEM
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2  ON SF2.D_E_L_E_T_ = ' ' AND F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND F2_CLIENTE = D2_CLIENTE AND F2_LOJA = D2_LOJA
		CQUERY += " INNER JOIN " + RETSQLNAME("SB1") + " SB1  ON SB1.D_E_L_E_T_ = ' ' AND B1_COD = D2_COD"
		CQUERY += " WHERE SD1.D_E_L_E_T_ = ' '
		CQUERY += " AND D1_TIPO = 'D'
	ENDIF

	IF ALLTRIM(CCODIGO) == "NotasSaidaCapas"
		CQUERY += " SELECT F2_VOLUME1, C5_XXFORMA, C5_XXTIPO, F2_CARGA, F2_DOC, F2_SERIE, F2_VEND1, SF2.R_E_C_N_O_ AS RECNOSF2, F2_EMISSAO, F2_DTENTR, F2_EMISSAO, F2_VALBRUT, F2_ESPECIE, F2_CLIENTE, F2_LOJA, D2_PEDIDO, F2_COND, F2_FILIAL, F2_PBRUTO, F2_SEQENT, SUM(D2_QUANT) ITENS FROM " + RETSQLNAME("SD2") + " SD2
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2 ON F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND D2_CLIENTE = F2_CLIENTE AND D2_LOJA = F2_LOJA AND SF2.D_E_L_E_T_ = ' '
		CQUERY += " INNER JOIN " + RETSQLNAME("SC5") + " SC5 ON C5_FILIAL = D2_FILIAL AND C5_NUM = D2_PEDIDO
		CQUERY += " WHERE SD2.D_E_L_E_T_ = ' '
		CQUERY += " AND D2_EMISSAO >= '"+DTOS(DATE()-180)+"'"
		CQUERY += " GROUP BY F2_VOLUME1, C5_XXFORMA, C5_XXTIPO, F2_CARGA, F2_DOC, F2_SERIE, F2_VEND1, SF2.R_E_C_N_O_ , F2_EMISSAO, F2_DTENTR, F2_EMISSAO, F2_VALBRUT, F2_ESPECIE, F2_CLIENTE, F2_LOJA, D2_PEDIDO, F2_COND, F2_FILIAL, F2_PBRUTO, F2_SEQENT
	ENDIF

	IF ALLTRIM(CCODIGO) == "NotasSaidaCapasDiario"
		CQUERY += " SELECT F2_VOLUME1, C5_XXFORMA, C5_XXTIPO, F2_CARGA, F2_DOC, F2_SERIE, F2_VEND1, SF2.R_E_C_N_O_ AS RECNOSF2, F2_EMISSAO, F2_DTENTR, F2_EMISSAO, F2_VALBRUT, F2_ESPECIE, F2_CLIENTE, F2_LOJA, D2_PEDIDO, F2_COND, F2_FILIAL, F2_PBRUTO, F2_SEQENT, SUM(D2_QUANT) ITENS FROM " + RETSQLNAME("SD2") + " SD2
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2 ON F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND D2_CLIENTE = F2_CLIENTE AND D2_LOJA = F2_LOJA AND SF2.D_E_L_E_T_ = ' '
		CQUERY += " INNER JOIN " + RETSQLNAME("SC5") + " SC5 ON C5_FILIAL = D2_FILIAL AND C5_NUM = D2_PEDIDO
		CQUERY += " WHERE SD2.D_E_L_E_T_ = ' '
		CQUERY += " AND D2_EMISSAO >= '"+DTOS(DATE()-1)+"'"
		CQUERY += " GROUP BY F2_VOLUME1, C5_XXFORMA, C5_XXTIPO, F2_CARGA, F2_DOC, F2_SERIE, F2_VEND1, SF2.R_E_C_N_O_ , F2_EMISSAO, F2_DTENTR, F2_EMISSAO, F2_VALBRUT, F2_ESPECIE, F2_CLIENTE, F2_LOJA, D2_PEDIDO, F2_COND, F2_FILIAL, F2_PBRUTO, F2_SEQENT
	ENDIF

	IF ALLTRIM(CCODIGO) == "NotasSaidaItens"
		CQUERY += " SELECT D2_FILIAL,CASE WHEN SD2.D2_LOCAL = '02' THEN TRIM(D2_COD)+'A' ELSE D2_COD END AS D2_COD, D2_QUANT, SF2.R_E_C_N_O_ AS RECNOSF2, SD2.R_E_C_N_O_ AS RECNOSD2, B1_CODBAR, F2_CARGA, F2_DOC, F2_SERIE, D2_PRCVEN, D2_PEDIDO, D2_CUSTO1, D2_VALIPI FROM " + RETSQLNAME("SD2") + " SD2
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2 ON F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND D2_CLIENTE = F2_CLIENTE AND D2_LOJA = F2_LOJA AND SF2.D_E_L_E_T_ = ' '
		CQUERY += " INNER JOIN " + RETSQLNAME("SB1") + " SB1 ON SB1.D_E_L_E_T_ = ' ' AND B1_COD = D2_COD
		CQUERY += " WHERE SD2.D_E_L_E_T_ = ' '
		CQUERY += " AND D2_EMISSAO >= '"+DTOS(DATE()-180)+"'"
		CQUERY += " ORDER BY D2_FILIAL, D2_DOC, D2_SERIE
	ENDIF

	IF ALLTRIM(CCODIGO) == "NotasSaidaItensDiario"
		CQUERY += " SELECT D2_FILIAL,CASE WHEN SD2.D2_LOCAL = '02' THEN TRIM(D2_COD)+'A' ELSE D2_COD END AS D2_COD, D2_QUANT, SF2.R_E_C_N_O_ AS RECNOSF2, SD2.R_E_C_N_O_ AS RECNOSD2, B1_CODBAR, F2_CARGA, F2_DOC, F2_SERIE, D2_PRCVEN, D2_PEDIDO, D2_CUSTO1, D2_VALIPI FROM " + RETSQLNAME("SD2") + " SD2
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2 ON F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND D2_CLIENTE = F2_CLIENTE AND D2_LOJA = F2_LOJA AND SF2.D_E_L_E_T_ = ' '
		CQUERY += " INNER JOIN " + RETSQLNAME("SB1") + " SB1 ON SB1.D_E_L_E_T_ = ' ' AND B1_COD = D2_COD
		CQUERY += " WHERE SD2.D_E_L_E_T_ = ' '
		CQUERY += " AND D2_EMISSAO >= '"+DTOS(DATE()-1)+"'"
		CQUERY += " ORDER BY D2_FILIAL, D2_DOC, D2_SERIE
	ENDIF

	IF ALLTRIM(CCODIGO) == "Emprs"
		CQUERY += " SELECT RA_TELEFON,  RA_DDDFONE, RA_DDDCELU, RA_NUMCELU, RA_APELIDO, RA_MAT, RA_EMAIL, RA_NOME, RA_FILIAL, RA_DEMISSA, RA_CIC, RA_SITFOLH FROM " + RETSQLNAME("SRA")
		CQUERY += " WHERE D_E_L_E_T_ = ' '
	ENDIF

	IF ALLTRIM(CCODIGO) == "Doceletronico"
		CQUERY += " SELECT SF2.R_E_C_N_O_ AS RECNOSF2, D2_PEDIDO, F2_CHVNFE, F2_DOC, F2_SERIE FROM " + RETSQLNAME("SD2") + " SD2
		CQUERY += " INNER JOIN " + RETSQLNAME("SF2") + " SF2 ON F2_FILIAL = D2_FILIAL AND F2_DOC = D2_DOC AND F2_SERIE = D2_SERIE AND D2_CLIENTE = F2_CLIENTE AND D2_LOJA = F2_LOJA AND SF2.D_E_L_E_T_ = ' ' AND F2_CHVNFE <> ' '
		CQUERY += " WHERE SD2.D_E_L_E_T_ = ' '
		CQUERY += " AND D2_EMISSAO >= '"+DTOS(DATE()-60)+"'"
		CQUERY += " GROUP BY SF2.R_E_C_N_O_, D2_PEDIDO, F2_CHVNFE, F2_DOC, F2_SERIE
	ENDIF

	IF ALLTRIM(CCODIGO) == "Contatos"
		CQUERY += " SELECT A1_COD, A1_LOJA, AGB_DDD, AGB_TELEFO, AC8_CODCON, U5_CONTAT, U5_EMAIL, U5_CPF, U5_NIVER, UM_DESC  FROM " + RETSQLNAME("AC8") + " AC8
		CQUERY += " INNER JOIN " + RETSQLNAME("SA1") + " SA1 ON AC8_FILENT = A1_FILIAL AND A1_COD+A1_LOJA = AC8_CODENT AND A1_MAXPED = '1'"
		CQUERY += " INNER JOIN " + RETSQLNAME("SU5") + " SU5 ON SU5.D_E_L_E_T_ = ' ' AND AC8_CODCON = U5_CODCONT AND U5_ATIVO = '1'
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("SUM") + " SUM ON SUM.D_E_L_E_T_ = ' ' AND U5_FUNCAO = UM_CARGO
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("AGA") + " AGA ON AGA.D_E_L_E_T_ = ' ' AND AGA_CODENT = U5_CODCONT AND AGA_FILIAL = U5_FILIAL
		CQUERY += " LEFT OUTER JOIN " + RETSQLNAME("AGB") + " AGB ON AGB.D_E_L_E_T_ = ' ' AND AGB_CODENT = U5_CODCONT AND AGB_FILIAL = U5_FILIAL
		CQUERY += " WHERE AC8.D_E_L_E_T_ = ' '
		CQUERY += " AND AC8_ENTIDA = 'SA1'
	ENDIF

	IF ALLTRIM(CCODIGO) == "ClientesEnderecos"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA1") + " SA1"
		CQUERY += " WHERE SA1.D_E_L_E_T_ = ' '"
		CQUERY += " AND A1_COND <> ' '"
		CQUERY += " AND A1_VEND <> ' '"
		CQUERY += " AND A1_MAXPED = '1'"
		//CQUERY += " AND A1_XXMAXIM = ' '"
	ENDIF

	IF ALLTRIM(CCODIGO) == "RedesClientes"
		CQUERY += " SELECT DISTINCT SA1.A1_CLIPRI CODREDE, PRI.A1_NREDUZ DESCRICAO FROM SA1010 SA1"
		CQUERY += " LEFT OUTER JOIN SA1010 PRI ON PRI.D_E_L_E_T_ = ' ' AND PRI.A1_COD = SA1.A1_CLIPRI AND PRI.A1_LOJA = SA1.A1_LOJPRI "
		CQUERY += " WHERE SA1.A1_CLIPRI <> ' ' AND SA1.D_E_L_E_T_ = ' ' AND SA1.A1_LOJPRI <> 'DOR' AND PRI.A1_LOJPRI <> 'DOR' ORDER BY SA1.A1_CLIPRI "
	ENDIF

	IF ALLTRIM(CCODIGO) == "RotasExps"
		CQUERY += " SELECT * FROM " + RETSQLNAME("DA8") + " DA8
		CQUERY += " INNER JOIN " + RETSQLNAME("DA9") + " DA9 ON DA9_FILIAL = DA8_FILIAL AND DA9_ROTA = DA8_COD
		CQUERY += " WHERE DA8.D_E_L_E_T_ = ' '
		CQUERY += " AND DA8_ATIVO = '1'
	ENDIF

	IF ALLTRIM(CCODIGO) == "Gerente"
		CQUERY += " SELECT * FROM " + RETSQLNAME("SA3")
		CQUERY += " WHERE D_E_L_E_T_ = ' '
		CQUERY += " AND A3_COD = (
		CQUERY += " SELECT A3_GEREN FROM " + RETSQLNAME("SA3")
		CQUERY += " WHERE D_E_L_E_T_ = ' '
		CQUERY += " AND A3_GEREN <> ' '
		CQUERY += " )
	ENDIF

	IF ALLTRIM(CCODIGO) == "ClientesPorVendedores"
		CQUERY += " SELECT A1_COD, A1_LOJA, A1_VEND AS VEND FROM " + RETSQLNAME("SA1")
		CQUERY += " WHERE D_E_L_E_T_ = ' '
		CQUERY += " AND A1_VEND <> ' '
		CQUERY += " UNION ALL
		CQUERY += " SELECT A1_COD, A1_LOJA, A1_XVEND1 AS VEND FROM " + RETSQLNAME("SA1")
		CQUERY += " WHERE D_E_L_E_T_ = ' '
		CQUERY += " AND A1_XVEND1 <> ' '
	ENDIF

	IF ALLTRIM(CCODIGO) == "Descontos"
//		CQUERY += " SELECT * FROM " + RETSQLNAME("SA1") + " SA1"
//		CQUERY += " WHERE SA1.D_E_L_E_T_ = ' ' "
//		CQUERY += " AND SA1.A1_VEND <> ' ' "
//		CQUERY += " AND SA1.A1_DESC > '0' "
//		CQUERY += " ORDER BY SA1.A1_COD, SA1.A1_LOJA, SA1.A1_VEND "
		CQUERY += " SELECT 'R'+TRIM(ACO_CODREG)+TRIM(ACO_CODTAB)+TRIM(ACP_ITEM)+TRIM(ACP_CODPRO) AS CODDESCONTO, TRIM(ACO_CODCLI+ACO_LOJA) AS CODCLI, ACO_DATDE AS DTINICIO, ACO_DATATE AS DTFIM, '0' AS PERCDESC, ACP_CODPRO AS CODPROD, ACO_CODTAB AS NUMREGIAO "
		CQUERY += " FROM " + RETSQLNAME("ACO") + " ACO LEFT OUTER JOIN " + RETSQLNAME("ACP") + " ACP ON (ACP_CODREG = ACO_CODREG AND ACP.D_E_L_E_T_ <> '*') "
		CQUERY += " WHERE ACO.D_E_L_E_T_ = ' ' AND ACO.ACO_MSBLQL = '2' "
		CQUERY += " UNION ALL "
		CQUERY += " SELECT 'C'+TRIM(A1_COD+A1_LOJA) AS CODDESCONTO, TRIM(A1_COD+A1_LOJA) AS CODCLI, '20200101' AS DTINICIO, '20501231' AS DTFIM,A1_DESC AS PERCDESC, '' AS CODPROD, '' AS NUMREGIAO "
		CQUERY += " FROM " + RETSQLNAME("SA1") + " SA1 WHERE SA1.D_E_L_E_T_ = ' ' AND SA1.A1_VEND <> ' ' AND SA1.A1_DESC > '0' "

	ENDIF

	IF ALLTRIM(CCODIGO) == "SaldosContasCorrentesRcas"
		CQUERY += " SELECT ACK_CODVEN ,SUM(ACL_VALOR) LIMITE , SUM(ACL_SALDO) SALDO
		CQUERY += " FROM ACK010,ACL010
		CQUERY += " WHERE ACK_FILIAL = ACL_FILIAL
		CQUERY += " AND ACK_CODVER = ACL_CODVER
		CQUERY += " AND ACK_DATINI <= '"+DTOS(DATE())+"'
		CQUERY += " AND ACK_DATFIM >= '"+DTOS(DATE())+"'
		CQUERY += " AND ACL010.D_E_L_E_T_ = ' '
		CQUERY += " AND ACK010.D_E_L_E_T_ = ' '
		CQUERY += " GROUP BY ACK_CODVEN
	ENDIF

RETURN(CQUERY)

USER FUNCTION CALC_DES

	LOCAL CQUERY  := ""
	LOCAL NQUANX  := TMP->DA1_QTDLOT
	LOCAL NDESC   := 0
	LOCAL NVALOR  := 0
	PUBLIC NQTDX := 0
//IF TMP->DA1_QTDLOT != 9999999.99
//	RETURN(0)
//ENDIF

	CQUERY += " SELECT * FROM " + RETSQLNAME("DA1")
	CQUERY += " WHERE D_E_L_E_T_ = ' '"
	CQUERY += " AND DA1_CODTAB = '"+TMP->DA1_CODTAB+"'"
	CQUERY += " AND DA1_CODPRO = '"+TMP->DA1_CODPRO+"'"
	CQUERY += " AND DA1_FILIAL = '"+TMP->DA1_FILIAL+"'"

	IF SELECT("TMPX") > 0
		TMPX->(DBCLOSEAREA())
	ENDIF

	TCQUERY CQUERY NEW ALIAS "TMPX"

	NXX := 0

	WHILE !TMPX->(EOF())
		NXX ++

		IF NQUANX == TMPX->DA1_QTDLOT .AND. NXX == 1//QUANTO FOR IGUAL E SE FOR O PRIMEIRO ENTÃO O DESCONTO É 0 E A QUANTIDADE INICIAL É 1
			NQTDX := 1
			NDESC := 0
			EXIT
		ENDIF

		IF NQUANX == TMPX->DA1_QTDLOT .AND. NXX != 1
			NDESC := TMPX->DA1_PRCVEN/NVALOR - 1
			NDESC := ROUND(NDESC * (-100),2)

			NQTDX := NQTDX + 1
			EXIT
		ENDIF

		NVALOR := TMPX->DA1_PRCVEN
		NQTDX  := TMPX->DA1_QTDLOT
		TMPX->(DBSKIP())

	ENDDO

	TMPX->(DBCLOSEAREA())

RETURN(NDESC)

USER FUNCTION BUS_INI

RETURN(NQTDX)

USER FUNCTION BENVIA(ADADOS, CVERBO, CENDPOINT, CPATH,CPARTICIO)

	LOCAL OOBJ  := NIL
	LOCAL CRET := U_SNDJSON(ADADOS, CVERBO, CENDPOINT, CPATH)
	LOCAL LSUCESS := VALTYPE(CRET) == "C" .AND. "SUCCESS" $ UPPER(CRET)
	LOCAL LERROR := VALTYPE(CRET) == "C" .AND. "ERROR" $ UPPER(CRET)
	LOCAL NMAXIMO := 1500
//GETMV("XX_MAXIMO")
	PRIVATE AOBJETO
	PRIVATE OOBJ2 := NIL
	PRIVATE ORETORNO := NIL

	IF LEN(ALLTRIM(CRET)) > 0

		CRET  := U_Tira_Gra(decodeutf8(CRET))
		CRET2 := CRET

		FWJSONDESERIALIZE(CRET,@OOBJ)

		SA1->(DBSETORDER(1))
		IF VALTYPE(OOBJ) == "O"
			IF LSUCESS
				IF CVERBO != "DELETE" .AND. ALLTRIM(CENDPOINT) == "Clientes"
					DBSELECTAREA("SA1")
					SA1->(DBSETORDER(1))
					FOR _I := 1 TO LEN(OOBJ:SUCCESS)
						IF SA1->(DBSEEK(XFILIAL("SA1")+OOBJ:SUCCESS[_I]:CHAVE:CODCLI))
							If SA1->A1_XXMAXIM <> "S"
								RECLOCK("SA1",.F.)
								SA1->A1_XXMAXIM := "S"
								SA1->(MSUNLOCK())
							Endif 
						ENDIF
					NEXT _I
				ENDIF

				IF CVERBO != "DELETE" .AND. ALLTRIM(CENDPOINT) == "Produtos"
					DBSELECTAREA("SB1")
					SB1->(DBSETORDER(1))
					FOR _I := 1 TO LEN(OOBJ:SUCCESS)
						IF SB1->(DBSEEK(XFILIAL("SB1")+OOBJ:SUCCESS[_I]:CHAVE:CODPROD))
							RECLOCK("SB1",.F.)
							SB1->B1_XXMAXIM := "S"
							SB1->(MSUNLOCK())
						ENDIF
					NEXT _I
				ENDIF

				IF CVERBO != "DELETE" .AND. ALLTRIM(CENDPOINT) == "Fornecedores"
					DBSELECTAREA("SA2")
					SA2->(DBSETORDER(1))
					FOR _I := 1 TO LEN(OOBJ:SUCCESS)
						//IF SA2->(DBSEEK(XFILIAL("SA2")+OOBJ:SUCCESS[_I]:CHAVE:CODFORNEC))
						//	RECLOCK("SA2",.F.)
						//SA2->A2_XXMAXIM := "S"
						//	SA2->(MSUNLOCK())
						//ENDIF
					NEXT _I
				ENDIF

				IF CVERBO != "DELETE"
					IF (CPARTICIO == "1" .AND. LEN(ADADOS) < NMAXIMO) .OR. CPARTICIO != "1"
						IF &(CTAB1+"->"+CTAB1+"_TIPO") == "1"//ZM1->ZM1_TIPO == "1"
							RECLOCK(CTAB1,.F.)
							&(CTAB1+"->"+CTAB1+"_FLAG") := "S" //ZM1->ZM1_FLAG := "S"
							(CTAB1)->(MSUNLOCK())
						ENDIF
					ENDIF
				ENDIF
				//RODA A FUNÇÃO QUANDO FOR GET
				IF CVERBO != "DELETE" .AND. CMETODO == "3" .AND. CENDPOINT != "RetornoStatus" .AND. CENDPOINT != "RetornoClientes"
					//TEM QUE PERCORRER O OBJETO E IR GERANDO OS PEDIDOS DE VENDA
					AOBJETO := OOBJ:SUCCESS
					FOR YY := 1 TO LEN(AOBJETO)
						FWJSONDESERIALIZE(AOBJETO[YY]:OBJETO_JSON,@OOBJ2)
						ORETORNO:= OOBJ2
						IF !EMPTY(&(CTAB1+"->"+CTAB1+"_FUNCAO"))
							//EXECUTA A ROTINA DE RETORNO
							//Memowrite("C:\temp\retorno-"+STRTRAN(TIME(),":","-")+".txt", cret)
							&(&(CTAB1+"->"+CTAB1+"_FUNCAO"))
						ENDIF
					NEXT YY
				ENDIF
			ELSE
				IF CVERBO != "DELETE" .AND. &(CTAB1+"->"+CTAB1+"_TIPO") == "1"
					RECLOCK(CTAB1,.F.)
					&(CTAB1+"->"+CTAB1+"_FLAG") := "" //ZM1->ZM1_FLAG := ""
					(CTAB1)->(MSUNLOCK())
				ENDIF
			ENDIF

	/*	
			IF LERROR
				FOR _I := 1 TO LEN(OOBJ:ERROR)
					IF CVERBO <> "DELETE"
						IF SA1->(DBSEEK(XFILIAL()+OOBJ:ERROR[_I]:CHAVE))
						RECLOCK("SA1",.F.)
							IF CVERBO == "POST"
							SA1->A1_XXMAXI := "EI"
							ELSEIF CVERBO == "PUT"
							SA1->A1_XXMAXI := "EA"
							ENDIF
						SA1->(MSUNLOCK())
						ENDIF
					ELSE
					CUPD := " UPDATE "+RETSQLNAME("SA1")
					CUPD += " SET A1_XXMAXI = 'EE'"
					CUPD += " WHERE D_E_L_E_T_ = '*'"
					CUPD += " AND A1_COD+A1_LOJA = '"+OOBJ:ERROR[_I]:CHAVE+"'"
					TCSQLEXEC(CUPD)
					ENDIF
				NEXT _I
			ENDIF
		
			IF LSUCESS //TYPE("OOBJ:SUCESS") == "A"
				FOR _I := 1 TO LEN(OOBJ:SUCESS)
					IF CVERBO <> "DELETE"
						IF SA1->(DBSEEK(XFILIAL()+OOBJ:SUCESS[_I]:CHAVE))
						RECLOCK("SA1",.F.)
						SA1->A1_XXMAXI := "OK"
						SA1->(MSUNLOCK())
						ENDIF
					ELSE
					CUPD := " UPDATE "+RETSQLNAME("SA1")
					CUPD += " SET A1_XXMAXI = 'OK'"
					CUPD += " WHERE D_E_L_E_T_ = '*'"
					CUPD += " AND A1_COD+A1_LOJA = '"+OOBJ:SUCESS[_I]:CHAVE+"'"
					TCSQLEXEC(CUPD)
					ENDIF
				NEXT _I
			ENDIF
	*/	
		ENDIF
	ENDIF
RETURN

STATIC FUNCTION TRATA_VARIAVEL(CVARIAVEL,CTIPO2)

	IF VALTYPE(CVARIAVEL) == "N"
		IF CTIPO2 == "1"//CARACTER
			CVARIAVEL := CVALTOCHAR(CVARIAVEL)
		ENDIF
		//CVARIAVEL := STRTRAN(CVALTOCHAR(CVARIAVEL),".",",")//TRANSFORM(ADADOS[NX,NY],"@R 999,999,999.99")
	ELSE
		IF VALTYPE(CVARIAVEL) == "D"
			CVARIAVEL := FWTimeStamp( 5 , CVARIAVEL ,  TIME() )//DTOC(CVARIAVEL)
		ELSE
			IF VALTYPE(CVARIAVEL) == "C"
				IF CTIPO2 == "2"
					CVARIAVEL := VAL(CVARIAVEL)
				ELSE
					IF CTIPO2 == "3"
						CVARIAVEL := FWTimeStamp( 5 , STOD(CVARIAVEL) , TIME() )//DTOC(CVARIAVEL)
					ELSE
						CVARIAVEL := decodeutf8(UPPER(ALLTRIM(U_Tira_Gra(noacento(CVARIAVEL)))))
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF

RETURN(CVARIAVEL)

USER FUNCTION BUSC_CLI

	LOCAL CCOD := POSICIONE("SA1",3,XFILIAL("SA1")+TMP->M0_CGC,"A1_COD") + POSICIONE("SA1",3,XFILIAL("SA1")+TMP->M0_CGC,"A1_LOJA")

	IF EMPTY(CCOD)
		CCOD := "0"
	ENDIF

RETURN(CCOD)

USER FUNCTION COND_PAG

	LOCAL NTOT := 0

	ADADOS := CONDICAO(100,TMP->E4_CODIGO)

	IF !EMPTY(ADADOS)
		NDIAS  := ADADOS[LEN(ADADOS),1] - DDATABASE

		NTOT   := INT(NDIAS/LEN(ADADOS))
	ENDIF

RETURN(CVALTOCHAR(NTOT))

USER FUNCTION SUP_GER()

//VERIFICAR SE TEM SUPERVISOR OU GERENTE
	DO CASE
	CASE !EMPTY(TMP->A3_SUPER)
		RETURN(TMP->A3_SUPER)
	CASE EMPTY(TMP->A3_SUPER) .AND. !EMPTY(TMP->A3_GEREN)
		RETURN(TMP->A3_GEREN)
	OTHERWISE
		RETURN("999999")
	ENDCASE

RETURN

USER FUNCTION CLI_TAB()

	LOCAL CTABELA := ""
	LOCAL CQUERY  := ""
//DO CASE
	//CASE !EMPTY(TMP->A1_TABELA)
	//	CTABELA := TMP->A1_TABELA
//	CASE EMPTY(TMP->A1_TABELA)
	CQUERY += " SELECT * FROM " + RETSQLNAME("ACS") + " ACS"
	CQUERY += " INNER JOIN " + RETSQLNAME("ACT") + " ACT ON ACT_FILIAL = ACS_FILIAL AND ACT_CODREG = ACS_CODREG AND ACT.D_E_L_E_T_ = ' '  AND ACT_CODTAB <> ' '"
	CQUERY += " INNER JOIN " + RETSQLNAME("DA0") + " DA0 ON DA0_CODTAB = ACT_CODTAB AND DA0.D_E_L_E_T_ = ' ' AND DA0_FILIAL = '"+XFILIAL("DA0")+"' AND DA0_ATIVO = '1' AND (DA0_DATATE >= '"+DTOS(DATE())+"' OR DA0_DATATE = ' ') AND DA0_MAXPED = '1'"
	CQUERY += " WHERE ACS.D_E_L_E_T_ = ' '
	CQUERY += " AND ((ACS_CODCLI = '"+TMP->A1_COD+"' AND ACS_LOJA = '"+TMP->A1_LOJA+"') OR  ACS_GRPVEN = '"+TMP->A1_GRPVEN+"'  AND ACS_CODCLI = ' ' AND ACS_LOJA = ' ')
	CQUERY += " AND ROWNUM = 1
	CQUERY += " AND ACS_FILIAL = '"+XFILIAL("ACS")+"'"
	CQUERY += " ORDER BY ACT_CODTAB"
	//Memowrite("C:\temp\REL-"+STRTRAN(TIME(),":","-")+".txt", CQUERY)
	IF SELECT("TMP2") > 0
		TMP2->(DBCLOSEAREA())
	ENDIF

	TCQUERY CQUERY NEW ALIAS "TMP2"

	IF !TMP2->(EOF())
		CTABELA := TMP2->ACT_CODTAB
	ELSE
		CTABELA := GETMV("XX_TABELA")
	ENDIF

	TMP2->(DBCLOSEAREA())

//	OTHERWISE
//		CTABELA := GETMV("XX_TABELA")
//ENDCASE

RETURN(CTABELA)

USER FUNCTION CLI_CON()

	LOCAL CTABELA := U_CLI_TAB()
	LOCAL CQUERY  := ""

	DO CASE
//	CASE !EMPTY(TMP->A1_CONDPAG)
//		CTABELA := TMP->A1_CONDPAG
	CASE EMPTY(TMP->A1_CONDPAG)
		CQUERY += " SELECT * FROM " + RETSQLNAME("ACS") + " ACS"
		CQUERY += " INNER JOIN " + RETSQLNAME("ACT") + " ACT ON ACT_FILIAL = ACS_FILIAL AND ACT_CODREG = ACS_CODREG AND ACT.D_E_L_E_T_ = ' '  AND ACT_CODTAB = '"+CTABELA+"'"
		CQUERY += " WHERE ACS.D_E_L_E_T_ = ' '
		CQUERY += " AND ((ACS_CODCLI = '"+TMP->A1_COD+"' AND ACS_LOJA = '"+TMP->A1_LOJA+"') OR  ACS_GRPVEN = '"+TMP->A1_GRPVEN+"' AND ACS_CODCLI = ' ' AND ACS_LOJA = ' ')
		CQUERY += " AND ROWNUM = 1
		CQUERY += " AND ACS_FILIAL = '"+XFILIAL("ACS")+"'"
		CQUERY += " ORDER BY ACT_CONDPG"
		//Memowrite("C:\temp\REL-"+STRTRAN(TIME(),":","-")+".txt", CQUERY)
		IF SELECT("TMP2") > 0
			TMP2->(DBCLOSEAREA())
		ENDIF

		TCQUERY CQUERY NEW ALIAS "TMP2"

		IF !TMP2->(EOF())
			IF !EMPTY(TMP2->ACT_CONDPG)
				CTABELA := TMP2->ACT_CONDPG
			ELSE
				CTABELA := GETMV("XX_CONDPAG")
			ENDIF
		ELSE
			CTABELA := GETMV("XX_CONDPAG")
		ENDIF

		TMP2->(DBCLOSEAREA())

	OTHERWISE
		CTABELA := GETMV("XX_CONDPAG")
	ENDCASE

RETURN(CTABELA)

USER FUNCTION XFLAG(CTAB)

	DO CASE
	CASE CTAB == "SB1"
		RECLOCK("SB1",.F.)
		SB1->B1_XXMAXIM := ""
		SB1->(MSUNLOCK())
	CASE CTAB == "SA1"
		RECLOCK("SA1",.F.)
		SA1->A1_XXMAXIM := ""
		SA1->(MSUNLOCK())
	CASE CTAB == "SA2"
		RECLOCK("SA2",.F.)
		//SA2->A2_XXMAXIM := ""
		SA2->(MSUNLOCK())
	ENDCASE

RETURN

USER function Tira_Gra(_sOrig)
	local _sRet := _sOrig
	_sRet := strtran (_sRet, "á", "a")
	_sRet := strtran (_sRet, "é", "e")
	_sRet := strtran (_sRet, "í", "i")
	_sRet := strtran (_sRet, "ó", "o")
	_sRet := strtran (_sRet, "ú", "u")
	_SRET := STRTRAN (_SRET, "Á", "A")
	_SRET := STRTRAN (_SRET, "É", "E")
	_SRET := STRTRAN (_SRET, "Í", "I")
	_SRET := STRTRAN (_SRET, "Ó", "O")
	_SRET := STRTRAN (_SRET, "Ú", "U")
	_sRet := strtran (_sRet, "ã", "a")
	_sRet := strtran (_sRet, "õ", "o")
	_SRET := STRTRAN (_SRET, "Ã", "A")
	_SRET := STRTRAN (_SRET, "Õ", "O")
	_sRet := strtran (_sRet, "â", "a")
	_sRet := strtran (_sRet, "ê", "e")
	_sRet := strtran (_sRet, "î", "i")
	_sRet := strtran (_sRet, "ô", "o")
	_sRet := strtran (_sRet, "û", "u")
	_SRET := STRTRAN (_SRET, "Â", "A")
	_SRET := STRTRAN (_SRET, "Ê", "E")
	_SRET := STRTRAN (_SRET, "Î", "I")
	_SRET := STRTRAN (_SRET, "Ô", "O")
	_SRET := STRTRAN (_SRET, "Û", "U")
	_sRet := strtran (_sRet, "ç", "c")
	_sRet := strtran (_sRet, "Ç", "C")
	_sRet := strtran (_sRet, "à", "a")
	_sRet := strtran (_sRet, "À", "A")
	_sRet := strtran (_sRet, "º", ".")
	_sRet := strtran (_sRet, "ª", ".")
	_sRet := strtran (_sRet, chr (9), " ") // TAB
	_sRet := strtran (_sRet, "Ø", " ")
	_sRet := strtran (_sRet, "´", "'")
	_sRet := strtran (_sRet, "º", " ")
	_sRet := strtran (_sRet, "°", " ")
	_SRET := STRTRAN (_SRET, "  ", " ")

return _sRet

USER FUNCTION STATUS_PED()

	LOCAL CSTATUS := ""

//	CASE U_CORX3(SC5->C5_NUM)//PEDIDO FATURADO PARCIAL - NEM TODOS OS ITENS DA SC9 ESTA COM BLOQUEIO E AO MESMO TEMPO NAO FOI FATURADO.
//	CASE !Empty(SC5->C5_LIBEROK).And.Empty(SC5->C5_NOTA).And. Empty(SC5->C5_BLQ) .and. !U_CORX(SC5->C5_NUM) .and. !U_CORX2(SC5->C5_NUM) .AND. !U_CORX3(SC5->C5_NUM) .AND. !U_CORX4(SC5->C5_NUM) // APTO A "FATURAR" -- APTO A MONTAR CARGA 
//	{ "U_CORX4(SC5->C5_NUM) .AND. !U_CORX5(SC5->C5_NUM) .AND. EMPTY(C5_NOTA) .AND. !U_CORX(SC5->C5_NUM) .AND. !U_CORX2(SC5->C5_NUM) .AND. !U_CORX3(SC5->C5_NUM)",'BR_PINK'},; //PEDIDO ESTA NA EXPEDIÇÃO - NAO PODE SER ALTERADO NESTA MODIFICAÇÃO
//EMPTY(C5_LIBEROK).AND. EMPTY(C5_NOTA) .AND. EMPTY(C5_BLQ) //Pedido em Aberto - PEDIDO NAO FATURADO, NAO ESTA EM CARGA, NAO ESTA BLOQUEADO E SEM ELIMINAÇÃO DE RESIDUO
	DO CASE
	CASE TMP->REG_DEL == "*"
		CSTATUS := "C"
	CASE !EMPTY(TMP->C5_NOTA) .OR. TMP->C5_LIBEROK =='E' .AND. EMPTY(TMP->C5_BLQ)	//Pedido Encerrado - JA TEM OS ITENS FATURADOS OU ELIMINADO COMO RESIDUO
		CSTATUS := "F"
	CASE EMPTY(TMP->C5_LIBEROK) .AND. EMPTY(TMP->C5_NOTA)
		CSTATUS := "P"
	CASE EMPTY(TMP->C5_SITDEC) .AND. EMPTY(TMP->C5_NOTA) .AND. EMPTY(TMP->C5_LIBEROK)
		CSTATUS := "P"	
	CASE TMP->C5_SITDEC == "2"
		CSTATUS := "M"
	CASE TMP->C5_BLQ == '1'//PEDIDO BLOQUEDO POR REGRA
		CSTATUS := "B"
	CASE U_OLHA_SC9(TMP->C5_NUM)
		CSTATUS := "B"
	CASE TMP->C5_SITDEC = '6'
		CSTATUS := "B"
	OTHERWISE
		CSTATUS := "L"
	ENDCASE

/*
WHEN SC5.C5_SITDEC = '6' THEN 'Rejeitado'
WHEN SC5.C5_SITDEC = '2' THEN 'Em montagem'
WHEN SC5.C5_SITDEC = '5' THEN 'Faturado'
WHEN SC5.C5_SITDEC = '1' THEN 'Liberado Faturamento'
WHEN (SC5.C5_SITDEC = ' ' AND SC5.C5_LIBEROK = '') THEN 'Em Aberto'
WHEN (SC5.C5_SITDEC = ' ' AND SC5.C5_LIBEROK = 'S' AND SC9.C9_BLCRED <> '' ) THEN 'Bloq. de Credito'
WHEN (SC5.C5_SITDEC = ' ' AND SC5.C5_LIBEROK = 'S' AND SC9.C9_BLEST <> '' ) THEN 'Bloq. de Estoque'
WHEN (SC5.C5_SITDEC = ' ' AND SC5.C5_LIBEROK = 'S' AND SC9.C9_BLCRED = '' AND SC9.C9_BLEST = '') THEN 'Ag. Montagem'


/*
Posicao: P=Pendente 
           
L=Liberado (Liberado Financeiro) 
           
F=Faturado 
           
B=Bloqueado 
          
M=Montado (Em separação)
           
C=Cancelado
*/
RETURN(CSTATUS)

USER FUNCTION OLHA_SC9(NUMPED)

	LOCAL AAREA := GETAREA()
	LOCAL lRet	:= .F.

	DBSELECTAREA("SC9")
	SC9->(DBSETORDER(1))

	IF !SC9->(DBSEEK(XFILIAL("SC9")+NUMPED))
		lRet := .T.
	ENDIF

	WHILE !SC9->(EOF()) .AND. SC9->C9_FILIAL == XFILIAL("SC9") .AND. SC9->C9_PEDIDO == NUMPED
		IF SC9->C9_BLEST != "10" .AND. SC9->C9_BLEST != "  "
			LRET := .T.
		ENDIF

		SC9->(DBSKIP())
	ENDDO


	RESTAREA(AAREA)

RETURN(LRET)

User Function zCnvTipo2(cNumero)
	Local aArea     := GetArea()
	Local nValor    := 0
	Local lSoNumero := .T.
	Local nAtual    := 0
	Local cAscii    := ""
	Local nPosIni   := 0
	Local cCaract   := ""
	Local nValAux   := 0
	Local cZeros    := ""

	cNumero := Upper(cNumero)

	//Percorre os valores
	For nAtual := 1 To Len(cNumero)
		cCaract := SubStr(cNumero, nAtual, 1)

		//Se tiver alguma letra no numero
		If cCaract $ "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
			If nPosIni == 0
				nPosIni := nAtual
			EndIf
			lSoNumero := .F.
			Exit
		EndIf
	Next

	//Se tiver somente numero, converte com Val
	If lSoNumero
		nValor := Val(cNumero)

	Else
		nValor := 0

		//Percorre os valores
		For nAtual := 1 To Len(cNumero)
			cCaract := SubStr(cNumero, nAtual, 1)
			cZeros  := Replicate("0", Len(cNumero)-nAtual)

			//Se tiver alguma letra no numero
			If cCaract $ "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
				cAscii := cValToChar(Asc(cCaract) - 64 + 9)

				//Se for a partir da segunda posição e não for a última
				If nAtual > nPosIni .And. nAtual != Len(cNumero)
					nValAux := Val(cAscii + cZeros) + Iif(nAtual != Len(cNumero), 26 * (Asc(cCaract) - 64), 0)
					nValAux *= Val(cAscii)
					nValAux += (26 + Val(cAscii))
					nValor += nValAux

				Else
					nValor += Val(cAscii + cZeros) + Iif(nAtual != Len(cNumero), 26 * (Asc(cCaract) - 64), 0)
				EndIf

				//Se for somente números
			Else
				//Se for a partir da segunda posição e não for a última
				If nAtual > nPosIni .And. nAtual != Len(cNumero)
					nValor += Val(cCaract + cZeros) + (36 * 26) + (26*Val(cCaract))
				Else
					nValor += Val(cCaract + cZeros)
				EndIf
			EndIf
		Next
	EndIf

	RestArea(aArea)
Return nValor
